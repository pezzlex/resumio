{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _copy = _interopRequireDefault(require(\"./copy\"));\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _isNumber = _interopRequireDefault(require(\"../utils/isNumber\"));\n\nvar _prepend = _interopRequireDefault(require(\"../indices/prepend\"));\n\nvar _fromCodePoint = _interopRequireDefault(require(\"../glyph/fromCodePoint\"));\n/**\n * Prepend glyph to run\n *\n * @param  {Object}  glyph\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\n\n\nvar prependGlyph = function prependGlyph(glyph, run) {\n  var runScale = (0, _scale[\"default\"])(run);\n  var glyphLength = R.length(glyph.codePoints);\n  return R.evolve({\n    end: R.add(glyphLength),\n    glyphIndices: (0, _prepend[\"default\"])(glyphLength),\n    glyphs: R.prepend(glyph),\n    positions: R.prepend({\n      xAdvance: glyph.advanceWidth * runScale\n    })\n  })(run);\n};\n/**\n * Prepend glyph or code point on run\n *\n * @param  {Object | number}  glyph | codePoint\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\n\n\nvar prepend = function prepend(value, run) {\n  if (!value) return (0, _copy[\"default\"])(run);\n  var font = (0, _getFont[\"default\"])(run);\n  var glyph = (0, _isNumber[\"default\"])(value) ? (0, _fromCodePoint[\"default\"])(value, font) : value;\n  return prependGlyph(glyph, run);\n};\n\nvar _default = R.curryN(2, prepend);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/@react-pdf/textkit/run/prepend.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","R","_copy","_scale","_getFont","_isNumber","_prepend","_fromCodePoint","prependGlyph","glyph","run","runScale","glyphLength","length","codePoints","evolve","end","add","glyphIndices","glyphs","prepend","positions","xAdvance","advanceWidth","value","font","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,CAAC,GAAGH,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIK,KAAK,GAAGN,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAAlC;;AAEA,IAAIM,MAAM,GAAGP,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAnC;;AAEA,IAAIO,QAAQ,GAAGR,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,IAAIQ,SAAS,GAAGT,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAtC;;AAEA,IAAIS,QAAQ,GAAGV,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAArC;;AAEA,IAAIU,cAAc,GAAGX,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA3C;AAEA;;;;;;;;;AAOA,IAAIW,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,GAA7B,EAAkC;AACnD,MAAIC,QAAQ,GAAG,CAAC,GAAGR,MAAM,CAAC,SAAD,CAAV,EAAuBO,GAAvB,CAAf;AACA,MAAIE,WAAW,GAAGX,CAAC,CAACY,MAAF,CAASJ,KAAK,CAACK,UAAf,CAAlB;AACA,SAAOb,CAAC,CAACc,MAAF,CAAS;AACdC,IAAAA,GAAG,EAAEf,CAAC,CAACgB,GAAF,CAAML,WAAN,CADS;AAEdM,IAAAA,YAAY,EAAE,CAAC,GAAGZ,QAAQ,CAAC,SAAD,CAAZ,EAAyBM,WAAzB,CAFA;AAGdO,IAAAA,MAAM,EAAElB,CAAC,CAACmB,OAAF,CAAUX,KAAV,CAHM;AAIdY,IAAAA,SAAS,EAAEpB,CAAC,CAACmB,OAAF,CAAU;AACnBE,MAAAA,QAAQ,EAAEb,KAAK,CAACc,YAAN,GAAqBZ;AADZ,KAAV;AAJG,GAAT,EAOJD,GAPI,CAAP;AAQD,CAXD;AAYA;;;;;;;;;AASA,IAAIU,OAAO,GAAG,SAASA,OAAT,CAAiBI,KAAjB,EAAwBd,GAAxB,EAA6B;AACzC,MAAI,CAACc,KAAL,EAAY,OAAO,CAAC,GAAGtB,KAAK,CAAC,SAAD,CAAT,EAAsBQ,GAAtB,CAAP;AACZ,MAAIe,IAAI,GAAG,CAAC,GAAGrB,QAAQ,CAAC,SAAD,CAAZ,EAAyBM,GAAzB,CAAX;AACA,MAAID,KAAK,GAAG,CAAC,GAAGJ,SAAS,CAAC,SAAD,CAAb,EAA0BmB,KAA1B,IAAmC,CAAC,GAAGjB,cAAc,CAAC,SAAD,CAAlB,EAA+BiB,KAA/B,EAAsCC,IAAtC,CAAnC,GAAiFD,KAA7F;AACA,SAAOhB,YAAY,CAACC,KAAD,EAAQC,GAAR,CAAnB;AACD,CALD;;AAOA,IAAIgB,QAAQ,GAAGzB,CAAC,CAAC0B,MAAF,CAAS,CAAT,EAAYP,OAAZ,CAAf;;AAEArB,OAAO,CAAC,SAAD,CAAP,GAAqB2B,QAArB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _copy = _interopRequireDefault(require(\"./copy\"));\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _isNumber = _interopRequireDefault(require(\"../utils/isNumber\"));\n\nvar _prepend = _interopRequireDefault(require(\"../indices/prepend\"));\n\nvar _fromCodePoint = _interopRequireDefault(require(\"../glyph/fromCodePoint\"));\n\n/**\n * Prepend glyph to run\n *\n * @param  {Object}  glyph\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\nvar prependGlyph = function prependGlyph(glyph, run) {\n  var runScale = (0, _scale[\"default\"])(run);\n  var glyphLength = R.length(glyph.codePoints);\n  return R.evolve({\n    end: R.add(glyphLength),\n    glyphIndices: (0, _prepend[\"default\"])(glyphLength),\n    glyphs: R.prepend(glyph),\n    positions: R.prepend({\n      xAdvance: glyph.advanceWidth * runScale\n    })\n  })(run);\n};\n/**\n * Prepend glyph or code point on run\n *\n * @param  {Object | number}  glyph | codePoint\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\n\n\nvar prepend = function prepend(value, run) {\n  if (!value) return (0, _copy[\"default\"])(run);\n  var font = (0, _getFont[\"default\"])(run);\n  var glyph = (0, _isNumber[\"default\"])(value) ? (0, _fromCodePoint[\"default\"])(value, font) : value;\n  return prependGlyph(glyph, run);\n};\n\nvar _default = R.curryN(2, prepend);\n\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}