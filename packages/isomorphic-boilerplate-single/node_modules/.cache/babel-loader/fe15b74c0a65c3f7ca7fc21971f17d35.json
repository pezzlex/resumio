{"ast":null,"code":"import { filterProps } from '../utils';\nimport { MessageFormatError } from '../error';\nimport { FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = ['localeMatcher', 'type'];\nexport function formatPlural(_a, getPluralRules, value, options) {\n  var locale = _a.locale,\n      onError = _a.onError;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!Intl.PluralRules) {\n    onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\"\n    /* MISSING_INTL_API */\n    ));\n  }\n\n  var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n\n  try {\n    return getPluralRules(locale, filteredOptions).select(value);\n  } catch (e) {\n    onError(new MessageFormatError('Error formatting plural.', e));\n  }\n\n  return 'other';\n}","map":{"version":3,"sources":["../../src/formatters/plural.ts"],"names":[],"mappings":"AACA,SAAQ,WAAR,QAA0B,UAA1B;AACA,SAAQ,kBAAR,QAAiC,UAAjC;AACA,SAAmB,WAAnB,QAAqC,oBAArC;AAEA,IAAM,qBAAqB,GAAyC,CAClE,eADkE,EAElE,MAFkE,CAApE;AAKA,OAAM,SAAU,YAAV,CACJ,EADI,EAEJ,cAFI,EAGJ,KAHI,EAIJ,OAJI,EAIuD;MAH1D,MAAA,GAAA,EAAA,CAAA,M;MAAQ,OAAA,GAAA,EAAA,CAAA,O;;AAGT,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAA2D;;AAE3D,MAAI,CAAC,IAAI,CAAC,WAAV,EAAuB;AACrB,IAAA,OAAO,CACL,IAAI,WAAJ,CACE,mHADF,EAGL;AAAA;AAHK,KADK,CAAP;AAQD;;AACD,MAAM,eAAe,GAAG,WAAW,CAAC,OAAD,EAAU,qBAAV,CAAnC;;AAEA,MAAI;AACF,WAAO,cAAc,CAAC,MAAD,EAAS,eAAT,CAAd,CAAwC,MAAxC,CAA+C,KAA/C,CAAP;AACD,GAFD,CAEE,OAAO,CAAP,EAAU;AACV,IAAA,OAAO,CAAC,IAAI,kBAAJ,CAAuB,0BAAvB,EAAmD,CAAnD,CAAD,CAAP;AACD;;AAED,SAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["import { filterProps } from '../utils';\nimport { MessageFormatError } from '../error';\nimport { FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new MessageFormatError('Error formatting plural.', e));\n    }\n    return 'other';\n}\n//# sourceMappingURL=plural.js.map"]},"metadata":{},"sourceType":"module"}