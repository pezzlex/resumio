{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/notification/style/css\";\nimport _notification from \"antd/es/notification\";\nimport _slicedToArray from \"/Users/pezannekhambatta/Desktop/resumio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/ResumeDetails/ResumeDetails.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport LayoutContent from '@iso/components/utility/layoutContent';\nimport Loader from '@iso/components/utility/loader';\nimport InvoicePageWrapper from '../Invoice/SingleInvoice.styles';\nimport { Title, Header } from '../AppLayout.style';\nimport { fetchResumeById, clearStatus, clearCurrentResume } from '../../redux/resumes/actions';\nimport { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer';\nimport RenderedPdf from '../RenderedPdf/RenderedPdf';\nimport { unstructured } from '../AddEditResume';\n\nconst ResumeDetails = () => {\n  const dispatch = useDispatch();\n\n  const _useParams = useParams(),\n        resumeId = _useParams.resumeId;\n\n  const _useSelector = useSelector(state => state.resumeData),\n        currentResume = _useSelector.currentResume,\n        success = _useSelector.success,\n        error = _useSelector.error;\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        resumeNotFound = _useState4[0],\n        setResumeNotFound = _useState4[1]; // Hackey workaround for React-PDF bug\n\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isPdfReady = _useState6[0],\n        setPdfReady = _useState6[1];\n\n  useEffect(() => {\n    dispatch(fetchResumeById(resumeId));\n  }, []);\n  useEffect(() => {\n    if (error || success) {\n      dispatch(clearStatus());\n    }\n  }, [success, error]);\n  useEffect(() => {\n    if (error) {\n      _notification['error']({\n        message: 'Error',\n        description: error\n      });\n\n      dispatch(clearCurrentResume());\n      setLoading(false);\n    }\n  }, [error]);\n  useEffect(() => {\n    if (success) {\n      if (currentResume) {\n        setLoading(false);\n        setPdfReady(false);\n        setTimeout(() => {\n          setPdfReady(true);\n        }, 100);\n      }\n    }\n  }, [success]);\n  return /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LayoutContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, !isLoading ? currentResume ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Resume \\\"\".concat(currentResume.fileName, \"\\\"\")), /*#__PURE__*/React.createElement(InvoicePageWrapper, {\n    className: \"InvoicePageWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageHeader viewMode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    className: \"isoGoInvoBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Back to My Resumes\"))), /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard/edit-resume/\".concat(resumeId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"Edit Resume\")))))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, isPdfReady ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PDFViewer, {\n    height: \"900\",\n    width: \"60%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(RenderedPdf, {\n    resume: unstructured(currentResume) // resume={{ fileName: 'dummy' }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(PDFDownloadLink, {\n    document: /*#__PURE__*/React.createElement(RenderedPdf, {\n      resume: unstructured(currentResume) // resume={{ fileName: 'dummy' }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }),\n    fileName: \"\".concat(currentResume.fileName, \".pdf\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, ({\n    blob,\n    url,\n    loading,\n    error\n  }) => loading ? 'Loading document...' : 'Download'))) :\n  /*#__PURE__*/\n  // <Skeleton loading={true} active />\n  React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  })))) : /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Resume not found!\"), /*#__PURE__*/React.createElement(InvoicePageWrapper, {\n    className: \"InvoicePageWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageHeader viewMode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    className: \"isoGoInvoBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  }, \"Back to My Resumes\")))))) :\n  /*#__PURE__*/\n  // <Skeleton loading={true} active />\n  React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ResumeDetails;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/ResumeDetails/ResumeDetails.js"],"names":["React","useEffect","useState","Link","useRouteMatch","useParams","useSelector","useDispatch","LayoutContentWrapper","LayoutContent","Loader","InvoicePageWrapper","Title","Header","fetchResumeById","clearStatus","clearCurrentResume","PDFDownloadLink","PDFViewer","RenderedPdf","unstructured","ResumeDetails","dispatch","resumeId","state","resumeData","currentResume","success","error","isLoading","setLoading","resumeNotFound","setResumeNotFound","isPdfReady","setPdfReady","message","description","setTimeout","fileName","blob","url","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Button, Row, Col, notification, Skeleton } from 'antd'\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper'\nimport LayoutContent from '@iso/components/utility/layoutContent'\nimport Loader from '@iso/components/utility/loader'\nimport InvoicePageWrapper from '../Invoice/SingleInvoice.styles'\nimport { Title, Header } from '../AppLayout.style'\nimport {\n  fetchResumeById,\n  clearStatus,\n  clearCurrentResume,\n} from '../../redux/resumes/actions'\nimport { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer'\nimport RenderedPdf from '../RenderedPdf/RenderedPdf'\n\nimport { unstructured } from '../AddEditResume'\n\nconst ResumeDetails = () => {\n  const dispatch = useDispatch()\n  const { resumeId } = useParams()\n  const { currentResume, success, error } = useSelector(\n    (state) => state.resumeData\n  )\n  const [isLoading, setLoading] = useState(true)\n  const [resumeNotFound, setResumeNotFound] = useState(false)\n  // Hackey workaround for React-PDF bug\n\n  const [isPdfReady, setPdfReady] = useState(true)\n\n  useEffect(() => {\n    dispatch(fetchResumeById(resumeId))\n  }, [])\n\n  useEffect(() => {\n    if (error || success) {\n      dispatch(clearStatus())\n    }\n  }, [success, error])\n\n  useEffect(() => {\n    if (error) {\n      notification['error']({\n        message: 'Error',\n        description: error,\n      })\n      dispatch(clearCurrentResume())\n      setLoading(false)\n    }\n  }, [error])\n  useEffect(() => {\n    if (success) {\n      if (currentResume) {\n        setLoading(false)\n        setPdfReady(false)\n        setTimeout(() => {\n          setPdfReady(true)\n        }, 100)\n      }\n    }\n  }, [success])\n\n  return (\n    <LayoutContentWrapper>\n      <LayoutContent>\n        {!isLoading ? (\n          currentResume ? (\n            <>\n              <Header>\n                <Title>{`Resume \"${currentResume.fileName}\"`}</Title>\n                <InvoicePageWrapper className=\"InvoicePageWrapper\">\n                  <div className=\"PageHeader viewMode\">\n                    <Link to=\"/dashboard\">\n                      <Button className=\"isoGoInvoBtn\">\n                        <span>Back to My Resumes</span>\n                      </Button>\n                    </Link>\n                    <Link to={`/dashboard/edit-resume/${resumeId}`}>\n                      <Button color=\"secondary\">\n                        <span>Edit Resume</span>\n                      </Button>\n                    </Link>\n                  </div>\n                </InvoicePageWrapper>\n              </Header>\n\n              <Row>\n                <Col flex=\"auto\">\n                  {isPdfReady ? (\n                    <>\n                      <PDFViewer height=\"900\" width=\"60%\">\n                        <RenderedPdf\n                          resume={unstructured(currentResume)}\n                          // resume={{ fileName: 'dummy' }}\n                        />\n                      </PDFViewer>\n                      <Button type=\"primary\">\n                        <PDFDownloadLink\n                          document={\n                            <RenderedPdf\n                              resume={unstructured(currentResume)}\n                              // resume={{ fileName: 'dummy' }}\n                            />\n                          }\n                          fileName={`${currentResume.fileName}.pdf`}\n                        >\n                          {({ blob, url, loading, error }) =>\n                            loading ? 'Loading document...' : 'Download'\n                          }\n                        </PDFDownloadLink>\n                      </Button>\n                    </>\n                  ) : (\n                    // <Skeleton loading={true} active />\n                    <Loader />\n                  )}\n                </Col>\n              </Row>\n            </>\n          ) : (\n            <Header>\n              <Title>Resume not found!</Title>\n              <InvoicePageWrapper className=\"InvoicePageWrapper\">\n                <div className=\"PageHeader viewMode\">\n                  <Link to=\"/dashboard\">\n                    <Button className=\"isoGoInvoBtn\">\n                      <span>Back to My Resumes</span>\n                    </Button>\n                  </Link>\n                </div>\n              </InvoicePageWrapper>\n            </Header>\n          )\n        ) : (\n          // <Skeleton loading={true} active />\n          <Loader />\n        )}\n      </LayoutContent>\n    </LayoutContentWrapper>\n  )\n}\n\nexport default ResumeDetails\n"]},"metadata":{},"sourceType":"module"}