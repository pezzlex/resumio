{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _wrapWords = _interopRequireDefault(require(\"./wrapWords\"));\n\nvar _typesetter = _interopRequireDefault(require(\"./typesetter\"));\n\nvar _generateGlyphs = _interopRequireDefault(require(\"./generateGlyphs\"));\n\nvar _resolveYOffset = _interopRequireDefault(require(\"./resolveYOffset\"));\n\nvar _preprocessRuns = _interopRequireDefault(require(\"./preprocessRuns\"));\n\nvar _splitParagraphs = _interopRequireDefault(require(\"./splitParagraphs\"));\n\nvar _finalizeFragments = _interopRequireDefault(require(\"./finalizeFragments\"));\n\nvar _resolveAttachments = _interopRequireDefault(require(\"./resolveAttachments\"));\n\nvar _applyDefaultStyles = _interopRequireDefault(require(\"./applyDefaultStyles\"));\n/**\n * A LayoutEngine is the main object that performs text layout.\n * It accepts an AttributedString and a Container object\n * to layout text into, and uses several helper objects to perform\n * various layout tasks. These objects can be overridden to customize\n * layout behavior.\n *\n * @param  {Object}  engines\n * @param  {Object}  attributted string\n * @param  {Object}  container rect\n * @param  {Object}  layout options\n * @return {Array} paragraph blocks\n */\n\n\nvar layoutEngine = function layoutEngine(engines, attributedString, container, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var processParagraphs = R.compose((0, _resolveYOffset[\"default\"])(engines, options), (0, _resolveAttachments[\"default\"])(engines, options), (0, _generateGlyphs[\"default\"])(engines, options), (0, _wrapWords[\"default\"])(engines, options));\n  return R.compose((0, _finalizeFragments[\"default\"])(engines, options), (0, _typesetter[\"default\"])(engines, options, container), R.map(processParagraphs), (0, _splitParagraphs[\"default\"])(engines, options), (0, _preprocessRuns[\"default\"])(engines, options), (0, _applyDefaultStyles[\"default\"])(engines, options))(attributedString);\n};\n\nvar _default = R.curryN(3, layoutEngine);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/@react-pdf/textkit/layout/index.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","R","_wrapWords","_typesetter","_generateGlyphs","_resolveYOffset","_preprocessRuns","_splitParagraphs","_finalizeFragments","_resolveAttachments","_applyDefaultStyles","layoutEngine","engines","attributedString","container","options","processParagraphs","compose","map","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,CAAC,GAAGH,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIK,UAAU,GAAGN,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,IAAIM,WAAW,GAAGP,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,IAAIO,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAA5C;;AAEA,IAAIQ,eAAe,GAAGT,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAA5C;;AAEA,IAAIS,eAAe,GAAGV,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAA5C;;AAEA,IAAIU,gBAAgB,GAAGX,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAA7C;;AAEA,IAAIW,kBAAkB,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA/C;;AAEA,IAAIY,mBAAmB,GAAGb,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAAhD;;AAEA,IAAIa,mBAAmB,GAAGd,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAAhD;AAEA;;;;;;;;;;;;;;;AAaA,IAAIc,YAAY,GAAG,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,gBAA/B,EAAiDC,SAAjD,EAA4DC,OAA5D,EAAqE;AACtF,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIC,iBAAiB,GAAGf,CAAC,CAACgB,OAAF,CAAU,CAAC,GAAGZ,eAAe,CAAC,SAAD,CAAnB,EAAgCO,OAAhC,EAAyCG,OAAzC,CAAV,EAA6D,CAAC,GAAGN,mBAAmB,CAAC,SAAD,CAAvB,EAAoCG,OAApC,EAA6CG,OAA7C,CAA7D,EAAoH,CAAC,GAAGX,eAAe,CAAC,SAAD,CAAnB,EAAgCQ,OAAhC,EAAyCG,OAAzC,CAApH,EAAuK,CAAC,GAAGb,UAAU,CAAC,SAAD,CAAd,EAA2BU,OAA3B,EAAoCG,OAApC,CAAvK,CAAxB;AACA,SAAOd,CAAC,CAACgB,OAAF,CAAU,CAAC,GAAGT,kBAAkB,CAAC,SAAD,CAAtB,EAAmCI,OAAnC,EAA4CG,OAA5C,CAAV,EAAgE,CAAC,GAAGZ,WAAW,CAAC,SAAD,CAAf,EAA4BS,OAA5B,EAAqCG,OAArC,EAA8CD,SAA9C,CAAhE,EAA0Hb,CAAC,CAACiB,GAAF,CAAMF,iBAAN,CAA1H,EAAoJ,CAAC,GAAGT,gBAAgB,CAAC,SAAD,CAApB,EAAiCK,OAAjC,EAA0CG,OAA1C,CAApJ,EAAwM,CAAC,GAAGT,eAAe,CAAC,SAAD,CAAnB,EAAgCM,OAAhC,EAAyCG,OAAzC,CAAxM,EAA2P,CAAC,GAAGL,mBAAmB,CAAC,SAAD,CAAvB,EAAoCE,OAApC,EAA6CG,OAA7C,CAA3P,EAAkTF,gBAAlT,CAAP;AACD,CAPD;;AASA,IAAIM,QAAQ,GAAGlB,CAAC,CAACmB,MAAF,CAAS,CAAT,EAAYT,YAAZ,CAAf;;AAEAZ,OAAO,CAAC,SAAD,CAAP,GAAqBoB,QAArB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _wrapWords = _interopRequireDefault(require(\"./wrapWords\"));\n\nvar _typesetter = _interopRequireDefault(require(\"./typesetter\"));\n\nvar _generateGlyphs = _interopRequireDefault(require(\"./generateGlyphs\"));\n\nvar _resolveYOffset = _interopRequireDefault(require(\"./resolveYOffset\"));\n\nvar _preprocessRuns = _interopRequireDefault(require(\"./preprocessRuns\"));\n\nvar _splitParagraphs = _interopRequireDefault(require(\"./splitParagraphs\"));\n\nvar _finalizeFragments = _interopRequireDefault(require(\"./finalizeFragments\"));\n\nvar _resolveAttachments = _interopRequireDefault(require(\"./resolveAttachments\"));\n\nvar _applyDefaultStyles = _interopRequireDefault(require(\"./applyDefaultStyles\"));\n\n/**\n * A LayoutEngine is the main object that performs text layout.\n * It accepts an AttributedString and a Container object\n * to layout text into, and uses several helper objects to perform\n * various layout tasks. These objects can be overridden to customize\n * layout behavior.\n *\n * @param  {Object}  engines\n * @param  {Object}  attributted string\n * @param  {Object}  container rect\n * @param  {Object}  layout options\n * @return {Array} paragraph blocks\n */\nvar layoutEngine = function layoutEngine(engines, attributedString, container, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var processParagraphs = R.compose((0, _resolveYOffset[\"default\"])(engines, options), (0, _resolveAttachments[\"default\"])(engines, options), (0, _generateGlyphs[\"default\"])(engines, options), (0, _wrapWords[\"default\"])(engines, options));\n  return R.compose((0, _finalizeFragments[\"default\"])(engines, options), (0, _typesetter[\"default\"])(engines, options, container), R.map(processParagraphs), (0, _splitParagraphs[\"default\"])(engines, options), (0, _preprocessRuns[\"default\"])(engines, options), (0, _applyDefaultStyles[\"default\"])(engines, options))(attributedString);\n};\n\nvar _default = R.curryN(3, layoutEngine);\n\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}