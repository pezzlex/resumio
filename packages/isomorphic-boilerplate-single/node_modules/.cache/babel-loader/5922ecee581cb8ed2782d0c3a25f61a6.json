{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n/**\n * Slice block at given height\n *\n * @param  {number}  height\n * @param  {Object}  paragraph block\n * @return {number} sliced paragraph block\n */\n\nvar sliceAtHeight = function sliceAtHeight(height) {\n  return function (block) {\n    var newBlock = [];\n    var counter = 0;\n\n    for (var _iterator = block, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var line = _ref;\n      counter += line.box.height;\n\n      if (counter < height) {\n        newBlock.push(line);\n      } else {\n        break;\n      }\n    }\n\n    return newBlock;\n  };\n};\n\nvar _default = sliceAtHeight;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/@react-pdf/textkit/block/sliceAtHeight.js"],"names":["exports","__esModule","sliceAtHeight","height","block","newBlock","counter","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","value","line","box","push","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;AAEA;;;;;;;;AAOA,IAAIE,aAAa,GAAG,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AACjD,SAAO,UAAUC,KAAV,EAAiB;AACtB,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,OAAO,GAAG,CAAd;;AAEA,SAAK,IAAIC,SAAS,GAAGH,KAAhB,EAAuBI,QAAQ,GAAGC,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAlC,EAA4DI,EAAE,GAAG,CAAjE,EAAoEJ,SAAS,GAAGC,QAAQ,GAAGD,SAAH,GAAeA,SAAS,CAACK,MAAM,CAACC,QAAR,CAAT,EAA5G,IAA4I;AAC1I,UAAIC,IAAJ;;AAEA,UAAIN,QAAJ,EAAc;AACZ,YAAIG,EAAE,IAAIJ,SAAS,CAACQ,MAApB,EAA4B;AAC5BD,QAAAA,IAAI,GAAGP,SAAS,CAACI,EAAE,EAAH,CAAhB;AACD,OAHD,MAGO;AACLA,QAAAA,EAAE,GAAGJ,SAAS,CAACS,IAAV,EAAL;AACA,YAAIL,EAAE,CAACM,IAAP,EAAa;AACbH,QAAAA,IAAI,GAAGH,EAAE,CAACO,KAAV;AACD;;AAED,UAAIC,IAAI,GAAGL,IAAX;AACAR,MAAAA,OAAO,IAAIa,IAAI,CAACC,GAAL,CAASjB,MAApB;;AAEA,UAAIG,OAAO,GAAGH,MAAd,EAAsB;AACpBE,QAAAA,QAAQ,CAACgB,IAAT,CAAcF,IAAd;AACD,OAFD,MAEO;AACL;AACD;AACF;;AAED,WAAOd,QAAP;AACD,GA3BD;AA4BD,CA7BD;;AA+BA,IAAIiB,QAAQ,GAAGpB,aAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBsB,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\n/**\n * Slice block at given height\n *\n * @param  {number}  height\n * @param  {Object}  paragraph block\n * @return {number} sliced paragraph block\n */\nvar sliceAtHeight = function sliceAtHeight(height) {\n  return function (block) {\n    var newBlock = [];\n    var counter = 0;\n\n    for (var _iterator = block, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var line = _ref;\n      counter += line.box.height;\n\n      if (counter < height) {\n        newBlock.push(line);\n      } else {\n        break;\n      }\n    }\n\n    return newBlock;\n  };\n};\n\nvar _default = sliceAtHeight;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}