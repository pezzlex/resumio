{"ast":null,"code":"import axios from 'axios';\nexport const FETCH_RESUMES = 'FETCH_RESUMES';\nexport const FETCH_RESUME_BY_ID = 'FETCH_RESUME_BY_ID';\nexport const ERROR = 'ERROR';\nexport const SUCCESS = 'SUCCESS';\nexport const CLEAR_STATUS = 'CLEAR_STATUS';\nexport const CLEAR_CURRENT_RESUME = 'CLEAR_CURRENT_RESUME';\nexport const fetchResumes = params => {\n  return dispatch => {\n    axios.get(\"http://localhost:4000/resumes\", {\n      params\n    }).then(response => {\n      if (response.status === 200) {\n        console.log('found resumes ', response.data.data);\n        dispatch({\n          type: FETCH_RESUMES,\n          payload: response.data.data\n        });\n        dispatch({\n          type: SUCCESS,\n          payload: response.data.message\n        });\n      }\n    }).catch(err => {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.message\n      });\n    });\n  };\n};\nexport const deleteResume = id => {\n  return dispatch => {\n    axios.delete(\"http://localhost:4000/resumes/\".concat(id)).then(response => {\n      console.log('deleting');\n\n      if (response.status === 200) {\n        dispatch(fetchResumes());\n        dispatch({\n          type: SUCCESS,\n          payload: response.data.message\n        });\n      }\n    }).catch(err => {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.message\n      });\n    });\n  };\n};\nexport const fetchResumeById = id => {\n  console.log('called??');\n  return dispatch => {\n    axios.get(\"http://localhost:4000/resumes/\".concat(id)).then(response => {\n      if (response.status === 200) {\n        console.log('found resume', response.data.data);\n        dispatch({\n          type: FETCH_RESUME_BY_ID,\n          payload: response.data.data\n        });\n        dispatch({\n          type: SUCCESS,\n          payload: response.data.message\n        });\n      }\n    }).catch(err => {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.message\n      });\n    });\n  };\n};\nexport const addResume = resume => {\n  return dispatch => {\n    axios.post('http://localhost:4000/resumes/add', resume).then(response => {\n      if (response.status === 200) {\n        // reset current resume\n        dispatch({\n          type: FETCH_RESUME_BY_ID,\n          payload: response.data.data\n        });\n        dispatch({\n          type: SUCCESS,\n          payload: response.data.message\n        });\n      }\n    }).catch(err => {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.message\n      });\n    });\n  };\n};\nexport const editResume = (id, resume) => {\n  return dispatch => {\n    axios.put(\"http://localhost:4000/resumes/\".concat(id), resume).then(response => {\n      if (response.status === 200) {\n        // reset current resume\n        dispatch({\n          type: FETCH_RESUME_BY_ID,\n          payload: response.data.data\n        });\n        dispatch({\n          type: SUCCESS,\n          payload: response.data.message\n        });\n      }\n    }).catch(err => {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.message\n      });\n    });\n  };\n};\nexport const clearStatus = () => {\n  return dispatch => dispatch({\n    type: CLEAR_STATUS\n  });\n};\nexport const clearCurrentResume = () => {\n  return dispatch => {\n    dispatch({\n      type: CLEAR_CURRENT_RESUME\n    });\n    dispatch({\n      type: SUCCESS,\n      payload: 'Cleared current resume'\n    });\n  };\n};","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/redux/resumes/actions.js"],"names":["axios","FETCH_RESUMES","FETCH_RESUME_BY_ID","ERROR","SUCCESS","CLEAR_STATUS","CLEAR_CURRENT_RESUME","fetchResumes","params","dispatch","get","then","response","status","console","log","data","type","payload","message","catch","err","deleteResume","id","delete","fetchResumeById","addResume","resume","post","editResume","put","clearStatus","clearCurrentResume"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const FETCH_RESUMES = 'FETCH_RESUMES'\nexport const FETCH_RESUME_BY_ID = 'FETCH_RESUME_BY_ID'\nexport const ERROR = 'ERROR'\nexport const SUCCESS = 'SUCCESS'\nexport const CLEAR_STATUS = 'CLEAR_STATUS'\nexport const CLEAR_CURRENT_RESUME = 'CLEAR_CURRENT_RESUME'\n\nexport const fetchResumes = (params) => {\n  return (dispatch) => {\n    axios\n      .get(`http://localhost:4000/resumes`, { params })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log('found resumes ', response.data.data)\n          dispatch({\n            type: FETCH_RESUMES,\n            payload: response.data.data,\n          })\n          dispatch({\n            type: SUCCESS,\n            payload: response.data.message,\n          })\n        }\n      })\n      .catch((err) => {\n        dispatch({\n          type: ERROR,\n          payload: err.response.data.message,\n        })\n      })\n  }\n}\n\nexport const deleteResume = (id) => {\n  return (dispatch) => {\n    axios\n      .delete(`http://localhost:4000/resumes/${id}`)\n      .then((response) => {\n        console.log('deleting')\n        if (response.status === 200) {\n          dispatch(fetchResumes())\n          dispatch({\n            type: SUCCESS,\n            payload: response.data.message,\n          })\n        }\n      })\n      .catch((err) => {\n        dispatch({\n          type: ERROR,\n          payload: err.response.data.message,\n        })\n      })\n  }\n}\n\nexport const fetchResumeById = (id) => {\n  console.log('called??')\n  return (dispatch) => {\n    axios\n      .get(`http://localhost:4000/resumes/${id}`)\n      .then((response) => {\n        if (response.status === 200) {\n          console.log('found resume', response.data.data)\n          dispatch({\n            type: FETCH_RESUME_BY_ID,\n            payload: response.data.data,\n          })\n          dispatch({\n            type: SUCCESS,\n            payload: response.data.message,\n          })\n        }\n      })\n      .catch((err) => {\n        dispatch({\n          type: ERROR,\n          payload: err.response.data.message,\n        })\n      })\n  }\n}\n\nexport const addResume = (resume) => {\n  return (dispatch) => {\n    axios\n      .post('http://localhost:4000/resumes/add', resume)\n      .then((response) => {\n        if (response.status === 200) {\n          // reset current resume\n          dispatch({\n            type: FETCH_RESUME_BY_ID,\n            payload: response.data.data,\n          })\n          dispatch({\n            type: SUCCESS,\n            payload: response.data.message,\n          })\n        }\n      })\n      .catch((err) => {\n        dispatch({\n          type: ERROR,\n          payload: err.response.data.message,\n        })\n      })\n  }\n}\n\nexport const editResume = (id, resume) => {\n  return (dispatch) => {\n    axios\n      .put(`http://localhost:4000/resumes/${id}`, resume)\n      .then((response) => {\n        if (response.status === 200) {\n          // reset current resume\n          dispatch({\n            type: FETCH_RESUME_BY_ID,\n            payload: response.data.data,\n          })\n          dispatch({\n            type: SUCCESS,\n            payload: response.data.message,\n          })\n        }\n      })\n      .catch((err) => {\n        dispatch({\n          type: ERROR,\n          payload: err.response.data.message,\n        })\n      })\n  }\n}\n\nexport const clearStatus = () => {\n  return (dispatch) =>\n    dispatch({\n      type: CLEAR_STATUS,\n    })\n}\n\nexport const clearCurrentResume = () => {\n  return (dispatch) => {\n    dispatch({ type: CLEAR_CURRENT_RESUME })\n    dispatch({ type: SUCCESS, payload: 'Cleared current resume' })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}