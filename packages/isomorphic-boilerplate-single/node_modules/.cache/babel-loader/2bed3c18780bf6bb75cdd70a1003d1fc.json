{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/notification/style/css\";\nimport _notification from \"antd/es/notification\";\nimport _slicedToArray from \"/Users/pezannekhambatta/Desktop/resumio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/Pages/ForgotPassword/ForgotPassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, Redirect, useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux'; // import Input from '@iso/components/uielements/input'\n// import Button from '@iso/components/uielements/button'\n\nimport ForgotPasswordStyleWrapper from './ForgotPassword.styles';\nimport { clearStatus } from '../../../redux/auth/actions';\nimport { getTempLink } from '../../../redux/auth/actions';\n\nconst ForgotPassword = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        redirectToReferrer = _useState2[0],\n        setRedirectToReferrer = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const dispatch = useDispatch();\n  const isSignedIn = useSelector(state => state.Auth.token);\n  const error = useSelector(state => state.Auth.error);\n  const success = useSelector(state => state.Auth.success);\n  useEffect(() => {\n    setLoading(false);\n    dispatch(clearStatus());\n  }, [error, success]);\n  useEffect(() => {\n    if (isSignedIn) {\n      setRedirectToReferrer(true);\n    }\n  }, [isSignedIn]);\n  useEffect(() => {\n    // message.error(error)\n    if (error) {\n      _notification['error']({\n        message: 'Error',\n        description: error\n      });\n    }\n  }, [error]);\n  useEffect(() => {\n    // message.success(success)\n    if (success) {\n      _notification['success']({\n        message: 'Success',\n        description: success\n      });\n    }\n  }, [success]);\n  let location = useLocation();\n\n  let _ref = location.state || {\n    from: {\n      pathname: '/dashboard'\n    }\n  },\n      from = _ref.from;\n\n  if (redirectToReferrer) {\n    console.log('redirectToReferrer', redirectToReferrer);\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: from,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const onFinish = ({\n    email\n  }) => {\n    setLoading(true);\n    dispatch(getTempLink(email));\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/React.createElement(ForgotPasswordStyleWrapper, {\n    className: \"isoForgotPassPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoFormContentWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoFormContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoLogoWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Resumio\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoFormHeadText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Forgot Password?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Enter your email and we send you a reset link.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoForgotPassForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoInputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    layout: \"vertical\",\n    name: \"forgotPassword\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoInputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Email\",\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: 'Please input your email!'\n    }, {\n      type: 'email'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoInputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"Send Request\")))))))));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/Pages/ForgotPassword/ForgotPassword.js"],"names":["React","useState","useEffect","Link","Redirect","useHistory","useLocation","useSelector","useDispatch","ForgotPasswordStyleWrapper","clearStatus","getTempLink","ForgotPassword","redirectToReferrer","setRedirectToReferrer","isLoading","setLoading","dispatch","isSignedIn","state","Auth","token","error","success","message","description","location","from","pathname","console","log","onFinish","email","onFinishFailed","errorInfo","remember","required","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, Redirect, useHistory, useLocation } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n// import Input from '@iso/components/uielements/input'\n// import Button from '@iso/components/uielements/button'\nimport ForgotPasswordStyleWrapper from './ForgotPassword.styles'\nimport { clearStatus } from '../../../redux/auth/actions'\nimport { Form, Input, Button, Checkbox, message, notification } from 'antd'\nimport { getTempLink } from '../../../redux/auth/actions'\n\nconst ForgotPassword = () => {\n  const [redirectToReferrer, setRedirectToReferrer] = useState(false)\n  const [isLoading, setLoading] = useState(false)\n  const dispatch = useDispatch()\n  const isSignedIn = useSelector((state) => state.Auth.token)\n  const error = useSelector((state) => state.Auth.error)\n  const success = useSelector((state) => state.Auth.success)\n\n  useEffect(() => {\n    setLoading(false)\n    dispatch(clearStatus())\n  }, [error, success])\n\n  useEffect(() => {\n    if (isSignedIn) {\n      setRedirectToReferrer(true)\n    }\n  }, [isSignedIn])\n\n  useEffect(() => {\n    // message.error(error)\n    if (error) {\n      notification['error']({\n        message: 'Error',\n        description: error,\n      })\n    }\n  }, [error])\n  useEffect(() => {\n    // message.success(success)\n    if (success) {\n      notification['success']({\n        message: 'Success',\n        description: success,\n      })\n    }\n  }, [success])\n\n  let location = useLocation()\n  let { from } = location.state || { from: { pathname: '/dashboard' } }\n\n  if (redirectToReferrer) {\n    console.log('redirectToReferrer', redirectToReferrer)\n    return <Redirect to={from} />\n  }\n\n  const onFinish = ({ email }) => {\n    setLoading(true)\n    dispatch(getTempLink(email))\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <ForgotPasswordStyleWrapper className=\"isoForgotPassPage\">\n      <div className=\"isoFormContentWrapper\">\n        <div className=\"isoFormContent\">\n          <div className=\"isoLogoWrapper\">\n            <Link to=\"/dashboard\">Resumio</Link>\n          </div>\n\n          <div className=\"isoFormHeadText\">\n            <h3>Forgot Password?</h3>\n            <p>Enter your email and we send you a reset link.</p>\n          </div>\n\n          <div className=\"isoForgotPassForm\">\n            <div className=\"isoInputWrapper\">\n              {/* <Input size=\"large\" placeholder=\"Email\" /> */}\n              <Form\n                layout=\"vertical\"\n                name=\"forgotPassword\"\n                initialValues={{\n                  remember: true,\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <div className=\"isoInputWrapper\">\n                  <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please input your email!',\n                      },\n                      { type: 'email' },\n                    ]}\n                  >\n                    <Input placeholder=\"Email\" />\n                  </Form.Item>\n                </div>\n                <div className=\"isoInputWrapper\">\n                  <Form.Item>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      loading={isLoading}\n                    >\n                      Send Request\n                    </Button>\n                  </Form.Item>\n                </div>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ForgotPasswordStyleWrapper>\n  )\n}\n\nexport default ForgotPassword\n"]},"metadata":{},"sourceType":"module"}