{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport Input from './Input';\n\nvar SingleSelector = function SingleSelector(props) {\n  var inputElement = props.inputElement,\n      prefixCls = props.prefixCls,\n      id = props.id,\n      inputRef = props.inputRef,\n      disabled = props.disabled,\n      autoFocus = props.autoFocus,\n      autoComplete = props.autoComplete,\n      accessibilityIndex = props.accessibilityIndex,\n      mode = props.mode,\n      open = props.open,\n      values = props.values,\n      placeholder = props.placeholder,\n      tabIndex = props.tabIndex,\n      showSearch = props.showSearch,\n      searchValue = props.searchValue,\n      activeValue = props.activeValue,\n      onInputKeyDown = props.onInputKeyDown,\n      onInputMouseDown = props.onInputMouseDown,\n      onInputChange = props.onInputChange,\n      onInputPaste = props.onInputPaste,\n      onInputCompositionStart = props.onInputCompositionStart,\n      onInputCompositionEnd = props.onInputCompositionEnd;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputChanged = _React$useState2[0],\n      setInputChanged = _React$useState2[1];\n\n  var combobox = mode === 'combobox';\n  var inputEditable = combobox || showSearch && open;\n  var item = values[0];\n  var inputValue = searchValue || '';\n\n  if (combobox && activeValue && !inputChanged) {\n    inputValue = activeValue;\n  }\n\n  React.useEffect(function () {\n    if (combobox) {\n      setInputChanged(false);\n    }\n  }, [combobox, activeValue]); // Not show text when closed expect combobox mode\n\n  var hasTextInput = mode !== 'combobox' && !open ? false : !!inputValue;\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\")\n  }, React.createElement(Input, {\n    ref: inputRef,\n    prefixCls: prefixCls,\n    id: id,\n    open: open,\n    inputElement: inputElement,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    autoComplete: autoComplete,\n    editable: inputEditable,\n    accessibilityIndex: accessibilityIndex,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: function onChange(e) {\n      setInputChanged(true);\n      onInputChange(e);\n    },\n    onPaste: onInputPaste,\n    onCompositionStart: onInputCompositionStart,\n    onCompositionEnd: onInputCompositionEnd,\n    tabIndex: tabIndex,\n    attrs: pickAttrs(props, true)\n  })), !combobox && item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-item\")\n  }, item.label), !item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-placeholder\")\n  }, placeholder));\n};\n\nexport default SingleSelector;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/rc-select/es/Selector/SingleSelector.js"],"names":["_slicedToArray","React","pickAttrs","Input","SingleSelector","props","inputElement","prefixCls","id","inputRef","disabled","autoFocus","autoComplete","accessibilityIndex","mode","open","values","placeholder","tabIndex","showSearch","searchValue","activeValue","onInputKeyDown","onInputMouseDown","onInputChange","onInputPaste","onInputCompositionStart","onInputCompositionEnd","_React$useState","useState","_React$useState2","inputChanged","setInputChanged","combobox","inputEditable","item","inputValue","useEffect","hasTextInput","createElement","Fragment","className","concat","ref","editable","value","onKeyDown","onMouseDown","onChange","e","onPaste","onCompositionStart","onCompositionEnd","attrs","label"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport Input from './Input';\n\nvar SingleSelector = function SingleSelector(props) {\n  var inputElement = props.inputElement,\n      prefixCls = props.prefixCls,\n      id = props.id,\n      inputRef = props.inputRef,\n      disabled = props.disabled,\n      autoFocus = props.autoFocus,\n      autoComplete = props.autoComplete,\n      accessibilityIndex = props.accessibilityIndex,\n      mode = props.mode,\n      open = props.open,\n      values = props.values,\n      placeholder = props.placeholder,\n      tabIndex = props.tabIndex,\n      showSearch = props.showSearch,\n      searchValue = props.searchValue,\n      activeValue = props.activeValue,\n      onInputKeyDown = props.onInputKeyDown,\n      onInputMouseDown = props.onInputMouseDown,\n      onInputChange = props.onInputChange,\n      onInputPaste = props.onInputPaste,\n      onInputCompositionStart = props.onInputCompositionStart,\n      onInputCompositionEnd = props.onInputCompositionEnd;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputChanged = _React$useState2[0],\n      setInputChanged = _React$useState2[1];\n\n  var combobox = mode === 'combobox';\n  var inputEditable = combobox || showSearch && open;\n  var item = values[0];\n  var inputValue = searchValue || '';\n\n  if (combobox && activeValue && !inputChanged) {\n    inputValue = activeValue;\n  }\n\n  React.useEffect(function () {\n    if (combobox) {\n      setInputChanged(false);\n    }\n  }, [combobox, activeValue]); // Not show text when closed expect combobox mode\n\n  var hasTextInput = mode !== 'combobox' && !open ? false : !!inputValue;\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\")\n  }, React.createElement(Input, {\n    ref: inputRef,\n    prefixCls: prefixCls,\n    id: id,\n    open: open,\n    inputElement: inputElement,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    autoComplete: autoComplete,\n    editable: inputEditable,\n    accessibilityIndex: accessibilityIndex,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: function onChange(e) {\n      setInputChanged(true);\n      onInputChange(e);\n    },\n    onPaste: onInputPaste,\n    onCompositionStart: onInputCompositionStart,\n    onCompositionEnd: onInputCompositionEnd,\n    tabIndex: tabIndex,\n    attrs: pickAttrs(props, true)\n  })), !combobox && item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-item\")\n  }, item.label), !item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-placeholder\")\n  }, placeholder));\n};\n\nexport default SingleSelector;"]},"metadata":{},"sourceType":"module"}