{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache } from '../utils';\nimport { formatNumber, formatNumberToParts } from '../formatters/number';\nimport { formatRelativeTime } from '../formatters/relativeTime';\nimport { formatDate, formatTime, formatDateToParts, formatTimeToParts } from '../formatters/dateTime';\nimport { formatPlural } from '../formatters/plural';\nimport { formatMessage } from '../formatters/message';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nimport { formatList } from '../formatters/list';\nimport { formatDisplayName } from '../formatters/displayName';\nimport { InvalidConfigError, MissingDataError } from '../error';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\n\nfunction processIntlConfig(config) {\n  return {\n    locale: config.locale,\n    timeZone: config.timeZone,\n    formats: config.formats,\n    textComponent: config.textComponent,\n    messages: config.messages,\n    defaultLocale: config.defaultLocale,\n    defaultFormats: config.defaultFormats,\n    onError: config.onError,\n    wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment\n  };\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\n\n\nexport function createIntl(config, cache) {\n  var formatters = createFormatters(cache);\n\n  var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n\n  var locale = resolvedConfig.locale,\n      defaultLocale = resolvedConfig.defaultLocale,\n      onError = resolvedConfig.onError;\n\n  if (!locale) {\n    if (onError) {\n      onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\"));\n    } // Since there's no registered locale data for `locale`, this will\n    // fallback to the `defaultLocale` to make sure things can render.\n    // The `messages` are overridden to the `defaultProps` empty object\n    // to maintain referential equality across re-renders. It's assumed\n    // each <FormattedMessage> contains a `defaultMessage` prop.\n\n\n    resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n  } else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n    onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.NumberFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n  } else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length && onError) {\n    onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n  }\n\n  return __assign(__assign({}, resolvedConfig), {\n    formatters: formatters,\n    formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat),\n    formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat),\n    formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat),\n    formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat),\n    formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat),\n    formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat),\n    formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat),\n    formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules),\n    formatMessage: formatMessage.bind(null, resolvedConfig, formatters),\n    formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat),\n    formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames)\n  });\n}\n\nvar IntlProvider =\n/** @class */\nfunction (_super) {\n  __extends(IntlProvider, _super);\n\n  function IntlProvider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.cache = createIntlCache();\n    _this.state = {\n      cache: _this.cache,\n      intl: createIntl(processIntlConfig(_this.props), _this.cache),\n      prevConfig: processIntlConfig(_this.props)\n    };\n    return _this;\n  }\n\n  IntlProvider.getDerivedStateFromProps = function (props, _a) {\n    var prevConfig = _a.prevConfig,\n        cache = _a.cache;\n    var config = processIntlConfig(props);\n\n    if (!shallowEquals(prevConfig, config)) {\n      return {\n        intl: createIntl(config, cache),\n        prevConfig: config\n      };\n    }\n\n    return null;\n  };\n\n  IntlProvider.prototype.render = function () {\n    invariantIntlContext(this.state.intl);\n    return React.createElement(Provider, {\n      value: this.state.intl\n    }, this.props.children);\n  };\n\n  IntlProvider.displayName = 'IntlProvider';\n  IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n  return IntlProvider;\n}(React.PureComponent);\n\nexport default IntlProvider;","map":{"version":3,"sources":["../../src/components/provider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache, } from '../utils';\nimport { formatNumber, formatNumberToParts } from '../formatters/number';\nimport { formatRelativeTime } from '../formatters/relativeTime';\nimport { formatDate, formatTime, formatDateToParts, formatTimeToParts, } from '../formatters/dateTime';\nimport { formatPlural } from '../formatters/plural';\nimport { formatMessage } from '../formatters/message';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nimport { formatList } from '../formatters/list';\nimport { formatDisplayName } from '../formatters/displayName';\nimport { InvalidConfigError, MissingDataError } from '../error';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n    };\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\"));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.NumberFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), formatMessage: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEquals(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}