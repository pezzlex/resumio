{"ast":null,"code":"import _objectSpread from \"/Users/pezannekhambatta/Desktop/resumio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/pezannekhambatta/Desktop/resumio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/components/Tables/EditableCell.js\";\nimport React from 'react';\nimport Input from '../uielements/input';\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons';\nexport default function (props) {\n  const _React$useState = React.useState({\n    value: props.value,\n    editable: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleChange = event => {\n    const value = event.target.value;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      value\n    }));\n  };\n\n  const check = () => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      editable: false\n    }));\n\n    if (props.onChange) {\n      props.onChange(state.value, props.columnsKey, props.index);\n    }\n  };\n\n  const edit = () => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      editable: true\n    }));\n  };\n\n  const value = state.value,\n        editable = state.editable;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoEditData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, editable ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoEditDataWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: value,\n    onChange: handleChange,\n    onPressEnter: check,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CheckOutlined, {\n    className: \"isoEditIcon\",\n    onClick: check,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"isoDataWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, value || ' ', /*#__PURE__*/React.createElement(EditOutlined, {\n    className: \"isoEditIcon\",\n    onClick: edit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/components/Tables/EditableCell.js"],"names":["React","Input","CheckOutlined","EditOutlined","props","useState","value","editable","state","setState","handleChange","event","target","check","onChange","columnsKey","index","edit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,mBAA5C;AAEA,eAAe,UAAUC,KAAV,EAAiB;AAAA,0BACJJ,KAAK,CAACK,QAAN,CAAe;AACvCC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KAD0B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAf,CADI;AAAA;AAAA,QACvBC,KADuB;AAAA,QAChBC,QADgB;;AAK9B,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAML,KAAK,GAAGK,KAAK,CAACC,MAAN,CAAaN,KAA3B;AACAG,IAAAA,QAAQ,iCAAMD,KAAN;AAAaF,MAAAA;AAAb,OAAR;AACD,GAHD;;AAIA,QAAMO,KAAK,GAAG,MAAM;AAClBJ,IAAAA,QAAQ,iCAAMD,KAAN;AAAaD,MAAAA,QAAQ,EAAE;AAAvB,OAAR;;AACA,QAAIH,KAAK,CAACU,QAAV,EAAoB;AAClBV,MAAAA,KAAK,CAACU,QAAN,CAAeN,KAAK,CAACF,KAArB,EAA4BF,KAAK,CAACW,UAAlC,EAA8CX,KAAK,CAACY,KAApD;AACD;AACF,GALD;;AAMA,QAAMC,IAAI,GAAG,MAAM;AACjBR,IAAAA,QAAQ,iCAAMD,KAAN;AAAaD,MAAAA,QAAQ,EAAE;AAAvB,OAAR;AACD,GAFD;;AAf8B,QAkBtBD,KAlBsB,GAkBFE,KAlBE,CAkBtBF,KAlBsB;AAAA,QAkBfC,QAlBe,GAkBFC,KAlBE,CAkBfD,QAlBe;AAmB9B,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,gBACP;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,KAAd;AAAqB,IAAA,QAAQ,EAAEI,YAA/B;AAA6C,IAAA,YAAY,EAAEG,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,aAAzB;AAAuC,IAAA,OAAO,EAAEA,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADO,gBAMP;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,IAAI,GADZ,eAEE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,aAAxB;AAAsC,IAAA,OAAO,EAAEW,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAPJ,CADF;AAeD","sourcesContent":["import React from 'react'\nimport Input from '../uielements/input'\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons'\n\nexport default function (props) {\n  const [state, setState] = React.useState({\n    value: props.value,\n    editable: false,\n  })\n  const handleChange = (event) => {\n    const value = event.target.value\n    setState({ ...state, value })\n  }\n  const check = () => {\n    setState({ ...state, editable: false })\n    if (props.onChange) {\n      props.onChange(state.value, props.columnsKey, props.index)\n    }\n  }\n  const edit = () => {\n    setState({ ...state, editable: true })\n  }\n  const { value, editable } = state\n  return (\n    <div className=\"isoEditData\">\n      {editable ? (\n        <div className=\"isoEditDataWrapper\">\n          <Input value={value} onChange={handleChange} onPressEnter={check} />\n          <CheckOutlined className=\"isoEditIcon\" onClick={check} />\n        </div>\n      ) : (\n        <p className=\"isoDataWrapper\">\n          {value || ' '}\n          <EditOutlined className=\"isoEditIcon\" onClick={edit} />\n        </p>\n      )}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}