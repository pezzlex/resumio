{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pezannekhambatta/Desktop/resumio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginRequest),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loginSuccess),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loginError),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(checkAuthorization),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, takeEvery, put, fork } from 'redux-saga/effects';\nimport { createBrowserHistory } from 'history';\nimport { getToken, clearToken } from '@iso/lib/helpers/utility';\nimport actions from './actions';\nvar history = createBrowserHistory();\nvar fakeApiCall = true; // auth0 or express JWT\n\nexport function loginRequest() {\n  return _regeneratorRuntime.wrap(function loginRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery('LOGIN_REQUEST', /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n            var payload, token;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    payload = _ref.payload;\n                    token = payload.token;\n\n                    if (!token) {\n                      _context.next = 7;\n                      break;\n                    }\n\n                    _context.next = 5;\n                    return put({\n                      type: actions.LOGIN_SUCCESS,\n                      token: token,\n                      profile: 'Profile'\n                    });\n\n                  case 5:\n                    _context.next = 14;\n                    break;\n\n                  case 7:\n                    if (!fakeApiCall) {\n                      _context.next = 12;\n                      break;\n                    }\n\n                    _context.next = 10;\n                    return put({\n                      type: actions.LOGIN_SUCCESS,\n                      token: 'secret token',\n                      profile: 'Profile'\n                    });\n\n                  case 10:\n                    _context.next = 14;\n                    break;\n\n                  case 12:\n                    _context.next = 14;\n                    return put({\n                      type: actions.LOGIN_ERROR\n                    });\n\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\nexport function loginSuccess() {\n  return _regeneratorRuntime.wrap(function loginSuccess$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(actions.LOGIN_SUCCESS, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n            return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return localStorage.setItem('id_token', payload.token);\n\n                  case 2:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function loginError() {\n  return _regeneratorRuntime.wrap(function loginError$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(actions.LOGIN_ERROR, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n            return _regeneratorRuntime.wrap(function _callee3$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(actions.LOGOUT, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n            return _regeneratorRuntime.wrap(function _callee4$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    clearToken();\n                    _context7.next = 3;\n                    return put(history.push('/'));\n\n                  case 3:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee4);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function checkAuthorization() {\n  return _regeneratorRuntime.wrap(function checkAuthorization$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(actions.CHECK_AUTHORIZATION, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n            var token;\n            return _regeneratorRuntime.wrap(function _callee5$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    token = getToken().get('idToken');\n\n                    if (!token) {\n                      _context9.next = 4;\n                      break;\n                    }\n\n                    _context9.next = 4;\n                    return put({\n                      type: actions.LOGIN_SUCCESS,\n                      token: token,\n                      profile: 'Profile'\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _callee5);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked5);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(checkAuthorization), fork(loginRequest), fork(loginSuccess), fork(loginError), fork(logout)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/redux/auth/saga.js"],"names":["loginRequest","loginSuccess","loginError","logout","checkAuthorization","rootSaga","all","takeEvery","put","fork","createBrowserHistory","getToken","clearToken","actions","history","fakeApiCall","payload","token","type","LOGIN_SUCCESS","profile","LOGIN_ERROR","localStorage","setItem","LOGOUT","push","CHECK_AUTHORIZATION","get"],"mappings":";;oDASiBA,Y;qDAuBAC,Y;qDAMAC,U;qDAIAC,M;qDAMAC,kB;qDAYQC,Q;;AA5DzB,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,0BAArC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAMC,OAAO,GAAGJ,oBAAoB,EAApC;AACA,IAAMK,WAAW,GAAG,IAApB,C,CAA0B;;AAE1B,OAAO,SAAUf,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMO,SAAS,CAAC,eAAD,wCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAYS,oBAAAA,OAAZ,QAAYA,OAAZ;AACvBC,oBAAAA,KADuB,GACbD,OADa,CACvBC,KADuB;;AAAA,yBAE3BA,KAF2B;AAAA;AAAA;AAAA;;AAAA;AAG7B,2BAAMT,GAAG,CAAC;AACRU,sBAAAA,IAAI,EAAEL,OAAO,CAACM,aADN;AAERF,sBAAAA,KAAK,EAAEA,KAFC;AAGRG,sBAAAA,OAAO,EAAE;AAHD,qBAAD,CAAT;;AAH6B;AAAA;AAAA;;AAAA;AAAA,yBASzBL,WATyB;AAAA;AAAA;AAAA;;AAAA;AAU3B,2BAAMP,GAAG,CAAC;AACRU,sBAAAA,IAAI,EAAEL,OAAO,CAACM,aADN;AAERF,sBAAAA,KAAK,EAAE,cAFC;AAGRG,sBAAAA,OAAO,EAAE;AAHD,qBAAD,CAAT;;AAV2B;AAAA;AAAA;;AAAA;AAAA;AAgB3B,2BAAMZ,GAAG,CAAC;AAAEU,sBAAAA,IAAI,EAAEL,OAAO,CAACQ;AAAhB,qBAAD,CAAT;;AAhB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAlB,EAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBP,OAAO,SAAUpB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMM,SAAS,CAACM,OAAO,CAACM,aAAT,wCAAwB,kBAAUH,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACrC,2BAAMM,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCP,OAAO,CAACC,KAAzC,CAAN;;AADqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAxB,EAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMP,OAAO,SAAUf,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMK,SAAS,CAACM,OAAO,CAACQ,WAAT,wCAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAtB,EAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP,OAAO,SAAUlB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMI,SAAS,CAACM,OAAO,CAACW,MAAT,wCAAiB;AAAA;AAAA;AAAA;AAAA;AAC9BZ,oBAAAA,UAAU;AADoB;AAE9B,2BAAMJ,GAAG,CAACM,OAAO,CAACW,IAAR,CAAa,GAAb,CAAD,CAAT;;AAF8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAjB,EAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMP,OAAO,SAAUrB,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMG,SAAS,CAACM,OAAO,CAACa,mBAAT,wCAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AACrCT,oBAAAA,KADqC,GAC7BN,QAAQ,GAAGgB,GAAX,CAAe,SAAf,CAD6B;;AAAA,yBAEvCV,KAFuC;AAAA;AAAA;AAAA;;AAAA;AAGzC,2BAAMT,GAAG,CAAC;AACRU,sBAAAA,IAAI,EAAEL,OAAO,CAACM,aADN;AAERF,sBAAAA,KAAK,EAALA,KAFQ;AAGRG,sBAAAA,OAAO,EAAE;AAHD,qBAAD,CAAT;;AAHyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA9B,EAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYP,eAAe,SAAUf,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRG,IAAI,CAACL,kBAAD,CADI,EAERK,IAAI,CAACT,YAAD,CAFI,EAGRS,IAAI,CAACR,YAAD,CAHI,EAIRQ,IAAI,CAACP,UAAD,CAJI,EAKRO,IAAI,CAACN,MAAD,CALI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, takeEvery, put, fork } from 'redux-saga/effects';\nimport { createBrowserHistory } from 'history';\n\nimport { getToken, clearToken } from '@iso/lib/helpers/utility';\nimport actions from './actions';\n\nconst history = createBrowserHistory();\nconst fakeApiCall = true; // auth0 or express JWT\n\nexport function* loginRequest() {\n  yield takeEvery('LOGIN_REQUEST', function*({ payload }) {\n    const { token } = payload;\n    if (token) {\n      yield put({\n        type: actions.LOGIN_SUCCESS,\n        token: token,\n        profile: 'Profile',\n      });\n    } else {\n      if (fakeApiCall) {\n        yield put({\n          type: actions.LOGIN_SUCCESS,\n          token: 'secret token',\n          profile: 'Profile',\n        });\n      } else {\n        yield put({ type: actions.LOGIN_ERROR });\n      }\n    }\n  });\n}\n\nexport function* loginSuccess() {\n  yield takeEvery(actions.LOGIN_SUCCESS, function*(payload) {\n    yield localStorage.setItem('id_token', payload.token);\n  });\n}\n\nexport function* loginError() {\n  yield takeEvery(actions.LOGIN_ERROR, function*() {});\n}\n\nexport function* logout() {\n  yield takeEvery(actions.LOGOUT, function*() {\n    clearToken();\n    yield put(history.push('/'));\n  });\n}\nexport function* checkAuthorization() {\n  yield takeEvery(actions.CHECK_AUTHORIZATION, function*() {\n    const token = getToken().get('idToken');\n    if (token) {\n      yield put({\n        type: actions.LOGIN_SUCCESS,\n        token,\n        profile: 'Profile',\n      });\n    }\n  });\n}\nexport default function* rootSaga() {\n  yield all([\n    fork(checkAuthorization),\n    fork(loginRequest),\n    fork(loginSuccess),\n    fork(loginError),\n    fork(logout),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}