{"ast":null,"code":"// Generated by CoffeeScript 1.7.1\n(function () {\n  var ArrayT,\n      LazyArray,\n      LazyArrayT,\n      NumberT,\n      inspect,\n      utils,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function __extends(child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  ArrayT = require('./Array');\n  NumberT = require('./Number').Number;\n  utils = require('./utils');\n  inspect = require('util').inspect;\n\n  LazyArrayT = function (_super) {\n    __extends(LazyArrayT, _super);\n\n    function LazyArrayT() {\n      return LazyArrayT.__super__.constructor.apply(this, arguments);\n    }\n\n    LazyArrayT.prototype.decode = function (stream, parent) {\n      var length, pos, res;\n      pos = stream.pos;\n      length = utils.resolveLength(this.length, stream, parent);\n\n      if (this.length instanceof NumberT) {\n        parent = {\n          parent: parent,\n          _startOffset: pos,\n          _currentOffset: 0,\n          _length: length\n        };\n      }\n\n      res = new LazyArray(this.type, length, stream, parent);\n      stream.pos += length * this.type.size(null, parent);\n      return res;\n    };\n\n    LazyArrayT.prototype.size = function (val, ctx) {\n      if (val instanceof LazyArray) {\n        val = val.toArray();\n      }\n\n      return LazyArrayT.__super__.size.call(this, val, ctx);\n    };\n\n    LazyArrayT.prototype.encode = function (stream, val, ctx) {\n      if (val instanceof LazyArray) {\n        val = val.toArray();\n      }\n\n      return LazyArrayT.__super__.encode.call(this, stream, val, ctx);\n    };\n\n    return LazyArrayT;\n  }(ArrayT);\n\n  LazyArray = function () {\n    function LazyArray(type, length, stream, ctx) {\n      this.type = type;\n      this.length = length;\n      this.stream = stream;\n      this.ctx = ctx;\n      this.base = this.stream.pos;\n      this.items = [];\n    }\n\n    LazyArray.prototype.get = function (index) {\n      var pos;\n\n      if (index < 0 || index >= this.length) {\n        return void 0;\n      }\n\n      if (this.items[index] == null) {\n        pos = this.stream.pos;\n        this.stream.pos = this.base + this.type.size(null, this.ctx) * index;\n        this.items[index] = this.type.decode(this.stream, this.ctx);\n        this.stream.pos = pos;\n      }\n\n      return this.items[index];\n    };\n\n    LazyArray.prototype.toArray = function () {\n      var i, _i, _ref, _results;\n\n      _results = [];\n\n      for (i = _i = 0, _ref = this.length; _i < _ref; i = _i += 1) {\n        _results.push(this.get(i));\n      }\n\n      return _results;\n    };\n\n    LazyArray.prototype.inspect = function () {\n      return inspect(this.toArray());\n    };\n\n    return LazyArray;\n  }();\n\n  module.exports = LazyArrayT;\n}).call(this);","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/restructure/src/LazyArray.js"],"names":["ArrayT","LazyArray","LazyArrayT","NumberT","inspect","utils","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","require","Number","_super","apply","arguments","decode","stream","length","pos","res","resolveLength","_startOffset","_currentOffset","_length","type","size","val","ctx","toArray","encode","base","items","get","index","i","_i","_ref","_results","push","module","exports"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.7.1\n(function() {\n  var ArrayT, LazyArray, LazyArrayT, NumberT, inspect, utils,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  ArrayT = require('./Array');\n\n  NumberT = require('./Number').Number;\n\n  utils = require('./utils');\n\n  inspect = require('util').inspect;\n\n  LazyArrayT = (function(_super) {\n    __extends(LazyArrayT, _super);\n\n    function LazyArrayT() {\n      return LazyArrayT.__super__.constructor.apply(this, arguments);\n    }\n\n    LazyArrayT.prototype.decode = function(stream, parent) {\n      var length, pos, res;\n      pos = stream.pos;\n      length = utils.resolveLength(this.length, stream, parent);\n      if (this.length instanceof NumberT) {\n        parent = {\n          parent: parent,\n          _startOffset: pos,\n          _currentOffset: 0,\n          _length: length\n        };\n      }\n      res = new LazyArray(this.type, length, stream, parent);\n      stream.pos += length * this.type.size(null, parent);\n      return res;\n    };\n\n    LazyArrayT.prototype.size = function(val, ctx) {\n      if (val instanceof LazyArray) {\n        val = val.toArray();\n      }\n      return LazyArrayT.__super__.size.call(this, val, ctx);\n    };\n\n    LazyArrayT.prototype.encode = function(stream, val, ctx) {\n      if (val instanceof LazyArray) {\n        val = val.toArray();\n      }\n      return LazyArrayT.__super__.encode.call(this, stream, val, ctx);\n    };\n\n    return LazyArrayT;\n\n  })(ArrayT);\n\n  LazyArray = (function() {\n    function LazyArray(type, length, stream, ctx) {\n      this.type = type;\n      this.length = length;\n      this.stream = stream;\n      this.ctx = ctx;\n      this.base = this.stream.pos;\n      this.items = [];\n    }\n\n    LazyArray.prototype.get = function(index) {\n      var pos;\n      if (index < 0 || index >= this.length) {\n        return void 0;\n      }\n      if (this.items[index] == null) {\n        pos = this.stream.pos;\n        this.stream.pos = this.base + this.type.size(null, this.ctx) * index;\n        this.items[index] = this.type.decode(this.stream, this.ctx);\n        this.stream.pos = pos;\n      }\n      return this.items[index];\n    };\n\n    LazyArray.prototype.toArray = function() {\n      var i, _i, _ref, _results;\n      _results = [];\n      for (i = _i = 0, _ref = this.length; _i < _ref; i = _i += 1) {\n        _results.push(this.get(i));\n      }\n      return _results;\n    };\n\n    LazyArray.prototype.inspect = function() {\n      return inspect(this.toArray());\n    };\n\n    return LazyArray;\n\n  })();\n\n  module.exports = LazyArrayT;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}