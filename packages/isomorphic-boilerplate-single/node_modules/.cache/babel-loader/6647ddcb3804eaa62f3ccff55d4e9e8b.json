{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n\n    val = val[paths[idx]];\n    idx += 1;\n  }\n\n  return val;\n});\n\nexport default path;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/ramda/es/path.js"],"names":["_curry2","path","paths","obj","val","idx","length"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AAEA;;;;;;;;;;;;;;;;;;;AAkBA,IAAIC,IAAI,GAAG,aAAaD,OAAO,CAAC,SAASC,IAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0B;AACxD,MAAIC,GAAG,GAAGD,GAAV;AACA,MAAIE,GAAG,GAAG,CAAV;;AACA,SAAOA,GAAG,GAAGH,KAAK,CAACI,MAAnB,EAA2B;AACzB,QAAIF,GAAG,IAAI,IAAX,EAAiB;AACf;AACD;;AACDA,IAAAA,GAAG,GAAGA,GAAG,CAACF,KAAK,CAACG,GAAD,CAAN,CAAT;AACAA,IAAAA,GAAG,IAAI,CAAP;AACD;;AACD,SAAOD,GAAP;AACD,CAX8B,CAA/B;;AAYA,eAAeH,IAAf","sourcesContent":["import _curry2 from './internal/_curry2.js';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;"]},"metadata":{},"sourceType":"module"}