{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _hyphen = _interopRequireDefault(require(\"hyphen\"));\n\nvar _enUs = _interopRequireDefault(require(\"hyphen/patterns/en-us\"));\n\nvar SOFT_HYPHEN = \"\\xAD\";\nvar hyphenator = (0, _hyphen[\"default\"])(_enUs[\"default\"]);\nvar splitHyphen = R.split(SOFT_HYPHEN);\nvar cache = {};\nvar getParts = R.ifElse(R.contains(SOFT_HYPHEN), splitHyphen, R.o(splitHyphen, hyphenator));\n\nvar wordHyphenation = function wordHyphenation(options, word) {\n  if (R.isNil(word)) return [];\n  if (cache[word]) return cache[word];\n  cache[word] = getParts(word);\n  return cache[word];\n};\n\nvar _default = R.curryN(2, wordHyphenation);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","R","_hyphen","_enUs","SOFT_HYPHEN","hyphenator","splitHyphen","split","cache","getParts","ifElse","contains","o","wordHyphenation","options","word","isNil","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,CAAC,GAAGH,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIK,OAAO,GAAGN,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,IAAIM,KAAK,GAAGP,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAlC;;AAEA,IAAIO,WAAW,GAAG,MAAlB;AACA,IAAIC,UAAU,GAAG,CAAC,GAAGH,OAAO,CAAC,SAAD,CAAX,EAAwBC,KAAK,CAAC,SAAD,CAA7B,CAAjB;AACA,IAAIG,WAAW,GAAGL,CAAC,CAACM,KAAF,CAAQH,WAAR,CAAlB;AACA,IAAII,KAAK,GAAG,EAAZ;AACA,IAAIC,QAAQ,GAAGR,CAAC,CAACS,MAAF,CAAST,CAAC,CAACU,QAAF,CAAWP,WAAX,CAAT,EAAkCE,WAAlC,EAA+CL,CAAC,CAACW,CAAF,CAAIN,WAAJ,EAAiBD,UAAjB,CAA/C,CAAf;;AAEA,IAAIQ,eAAe,GAAG,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,IAAlC,EAAwC;AAC5D,MAAId,CAAC,CAACe,KAAF,CAAQD,IAAR,CAAJ,EAAmB,OAAO,EAAP;AACnB,MAAIP,KAAK,CAACO,IAAD,CAAT,EAAiB,OAAOP,KAAK,CAACO,IAAD,CAAZ;AACjBP,EAAAA,KAAK,CAACO,IAAD,CAAL,GAAcN,QAAQ,CAACM,IAAD,CAAtB;AACA,SAAOP,KAAK,CAACO,IAAD,CAAZ;AACD,CALD;;AAOA,IAAIE,QAAQ,GAAGhB,CAAC,CAACiB,MAAF,CAAS,CAAT,EAAYL,eAAZ,CAAf;;AAEAd,OAAO,CAAC,SAAD,CAAP,GAAqBkB,QAArB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _hyphen = _interopRequireDefault(require(\"hyphen\"));\n\nvar _enUs = _interopRequireDefault(require(\"hyphen/patterns/en-us\"));\n\nvar SOFT_HYPHEN = \"\\xAD\";\nvar hyphenator = (0, _hyphen[\"default\"])(_enUs[\"default\"]);\nvar splitHyphen = R.split(SOFT_HYPHEN);\nvar cache = {};\nvar getParts = R.ifElse(R.contains(SOFT_HYPHEN), splitHyphen, R.o(splitHyphen, hyphenator));\n\nvar wordHyphenation = function wordHyphenation(options, word) {\n  if (R.isNil(word)) return [];\n  if (cache[word]) return cache[word];\n  cache[word] = getParts(word);\n  return cache[word];\n};\n\nvar _default = R.curryN(2, wordHyphenation);\n\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}