{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n/**\n * Create attributed string from text fragments\n *\n * @param  {Array}  fragments\n * @return {Object} attributed string\n */\n\n\nvar fromFragments = function fromFragments(fragments) {\n  var offset = 0;\n  var getRuns = R.map(function (fragment) {\n    var run = {\n      start: offset,\n      end: offset + fragment.string.length,\n      attributes: fragment.attributes || {}\n    };\n    offset += fragment.string.length;\n    return run;\n  });\n  return R.applySpec({\n    runs: getRuns,\n    string: R.o(R.join(''), R.pluck('string'))\n  })(fragments);\n};\n\nvar _default = fromFragments;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/@react-pdf/textkit/attributedString/fromFragments.js"],"names":["_interopRequireWildcard","require","exports","__esModule","R","fromFragments","fragments","offset","getRuns","map","fragment","run","start","end","string","length","attributes","applySpec","runs","o","join","pluck","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,CAAC,GAAGJ,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;AAEA;;;;;;;;AAMA,IAAII,aAAa,GAAG,SAASA,aAAT,CAAuBC,SAAvB,EAAkC;AACpD,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,OAAO,GAAGJ,CAAC,CAACK,GAAF,CAAM,UAAUC,QAAV,EAAoB;AACtC,QAAIC,GAAG,GAAG;AACRC,MAAAA,KAAK,EAAEL,MADC;AAERM,MAAAA,GAAG,EAAEN,MAAM,GAAGG,QAAQ,CAACI,MAAT,CAAgBC,MAFtB;AAGRC,MAAAA,UAAU,EAAEN,QAAQ,CAACM,UAAT,IAAuB;AAH3B,KAAV;AAKAT,IAAAA,MAAM,IAAIG,QAAQ,CAACI,MAAT,CAAgBC,MAA1B;AACA,WAAOJ,GAAP;AACD,GARa,CAAd;AASA,SAAOP,CAAC,CAACa,SAAF,CAAY;AACjBC,IAAAA,IAAI,EAAEV,OADW;AAEjBM,IAAAA,MAAM,EAAEV,CAAC,CAACe,CAAF,CAAIf,CAAC,CAACgB,IAAF,CAAO,EAAP,CAAJ,EAAgBhB,CAAC,CAACiB,KAAF,CAAQ,QAAR,CAAhB;AAFS,GAAZ,EAGJf,SAHI,CAAP;AAID,CAfD;;AAiBA,IAAIgB,QAAQ,GAAGjB,aAAf;AACAH,OAAO,CAAC,SAAD,CAAP,GAAqBoB,QAArB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/**\n * Create attributed string from text fragments\n *\n * @param  {Array}  fragments\n * @return {Object} attributed string\n */\nvar fromFragments = function fromFragments(fragments) {\n  var offset = 0;\n  var getRuns = R.map(function (fragment) {\n    var run = {\n      start: offset,\n      end: offset + fragment.string.length,\n      attributes: fragment.attributes || {}\n    };\n    offset += fragment.string.length;\n    return run;\n  });\n  return R.applySpec({\n    runs: getRuns,\n    string: R.o(R.join(''), R.pluck('string'))\n  })(fragments);\n};\n\nvar _default = fromFragments;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}