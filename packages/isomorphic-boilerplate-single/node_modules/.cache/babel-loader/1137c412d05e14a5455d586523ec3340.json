{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n\n(function (DisplayName) {\n  DisplayName[\"formatDate\"] = \"FormattedDate\";\n  DisplayName[\"formatTime\"] = \"FormattedTime\";\n  DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n  DisplayName[\"formatList\"] = \"FormattedList\"; // Note that this DisplayName is the locale display name, not to be confused with\n  // the name of the enum, which is for React component display name in dev tools.\n\n  DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\n\nvar DisplayNameParts;\n\n(function (DisplayNameParts) {\n  DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n  DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n  DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n  DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\n\nexport var FormattedNumberParts = function FormattedNumberParts(props) {\n  return React.createElement(Context.Consumer, null, function (intl) {\n    invariantIntlContext(intl);\n\n    var value = props.value,\n        children = props.children,\n        formatProps = __rest(props, [\"value\", \"children\"]);\n\n    return children(intl.formatNumberToParts(value, formatProps));\n  });\n};\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n  var ComponentParts = function ComponentParts(props) {\n    return React.createElement(Context.Consumer, null, function (intl) {\n      invariantIntlContext(intl);\n\n      var value = props.value,\n          children = props.children,\n          formatProps = __rest(props, [\"value\", \"children\"]);\n\n      var date = typeof value === 'string' ? new Date(value || 0) : value;\n      var formattedParts = name === 'formatDate' ? intl.formatDateToParts(date, formatProps) : intl.formatTimeToParts(date, formatProps);\n      return children(formattedParts);\n    });\n  };\n\n  ComponentParts.displayName = DisplayNameParts[name];\n  return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n  var Component = function Component(props) {\n    return React.createElement(Context.Consumer, null, function (intl) {\n      invariantIntlContext(intl);\n\n      var value = props.value,\n          children = props.children,\n          formatProps = __rest(props, [\"value\", \"children\"]); // TODO: fix TS type definition for localeMatcher upstream\n\n\n      var formattedValue = intl[name](value, formatProps);\n\n      if (typeof children === 'function') {\n        return children(formattedValue);\n      }\n\n      var Text = intl.textComponent || React.Fragment;\n      return React.createElement(Text, null, formattedValue);\n    });\n  };\n\n  Component.displayName = DisplayName[name];\n  return Component;\n}","map":{"version":3,"sources":["../../src/components/createFormattedComponent.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport var FormattedNumberParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n    invariantIntlContext(intl);\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n})); };\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    var ComponentParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        var date = typeof value === 'string' ? new Date(value || 0) : value;\n        var formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    })); };\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    var Component = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        var formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        var Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    })); };\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n//# sourceMappingURL=createFormattedComponent.js.map"]},"metadata":{},"sourceType":"module"}