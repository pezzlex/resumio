{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\n\nvar FormattedPlural = function FormattedPlural(props) {\n  var value = props.value,\n      other = props.other,\n      children = props.children,\n      _a = props.intl,\n      formatPlural = _a.formatPlural,\n      Text = _a.textComponent;\n  var pluralCategory = formatPlural(value, props);\n  var formattedPlural = props[pluralCategory] || other;\n\n  if (typeof children === 'function') {\n    return children(formattedPlural);\n  }\n\n  if (Text) {\n    return React.createElement(Text, null, formattedPlural);\n  } // Work around @types/react where React.FC cannot return string\n\n\n  return formattedPlural;\n};\n\nFormattedPlural.defaultProps = {\n  type: 'cardinal'\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);","map":{"version":3,"sources":["../../src/components/plural.tsx"],"names":[],"mappings":"AAAA;;;;;AAMA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,QAAP,MAAqB,cAArB;;AAeA,IAAM,eAAe,GAAoB,SAAnC,eAAmC,CAAA,KAAA,EAAK;AAE1C,MAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AAAA,MACA,KAAA,GAAA,KAAA,CAAA,KADA;AAAA,MAEA,QAAA,GAAA,KAAA,CAAA,QAFA;AAAA,MAGA,EAAA,GAAA,KAAA,CAAA,IAHA;AAAA,MAGO,YAAA,GAAA,EAAA,CAAA,YAHP;AAAA,MAGqB,IAAA,GAAA,EAAA,CAAA,aAHrB;AAMF,MAAM,cAAc,GAAG,YAAY,CAAC,KAAD,EAAQ,KAAR,CAAnC;AACA,MAAM,eAAe,GAAG,KAAK,CAAC,cAAD,CAAL,IAAkC,KAA1D;;AAEA,MAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAClC,WAAO,QAAQ,CAAC,eAAD,CAAf;AACD;;AACD,MAAI,IAAJ,EAAU;AACR,WAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,IAAL,EAAO,eAAP,CAAP;AACD,GAhB2C,CAiB5C;;;AACA,SAAO,eAAP;AACD,CAnBD;;AAqBA,eAAe,CAAC,YAAhB,GAA+B;AAC7B,EAAA,IAAI,EAAE;AADuB,CAA/B;AAIA,eAAe,CAAC,WAAhB,GAA8B,iBAA9B;AAEA,eAAe,QAAQ,CAAC,eAAD,CAAvB","sourceRoot":"","sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nvar FormattedPlural = function (props) {\n    var value = props.value, other = props.other, children = props.children, _a = props.intl, formatPlural = _a.formatPlural, Text = _a.textComponent;\n    var pluralCategory = formatPlural(value, props);\n    var formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);\n//# sourceMappingURL=plural.js.map"]},"metadata":{},"sourceType":"module"}