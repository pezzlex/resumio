{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _length = _interopRequireDefault(require(\"./length\"));\n\nvar _normalize = _interopRequireDefault(require(\"../indices/normalize\"));\n\nvar reverseMerge = R.flip(R.merge);\nvar reverseConcat = R.flip(R.concat);\n/**\n * Concats two runs into one\n *\n * @param  {Object}  first run\n * @param  {Object}  second run\n * @return {Object}  concatenated run\n */\n\nvar concat = function concat(runA, runB) {\n  return R.evolve({\n    end: R.add((0, _length[\"default\"])(runB)),\n    glyphs: reverseConcat(R.prop('glyphs', runB)),\n    positions: reverseConcat(R.prop('positions', runB)),\n    attributes: reverseMerge(R.prop('attributes', runB)),\n    glyphIndices: R.compose(_normalize[\"default\"], reverseConcat(R.map(R.compose(R.inc, R.add(R.last(R.propOr([], 'glyphIndices', runA)) || 0)), R.propOr([], 'glyphIndices', runB))))\n  })(runA);\n};\n\nvar _default = R.curryN(2, concat);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/@react-pdf/textkit/run/concat.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","R","_length","_normalize","reverseMerge","flip","merge","reverseConcat","concat","runA","runB","evolve","end","add","glyphs","prop","positions","attributes","glyphIndices","compose","map","inc","last","propOr","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,CAAC,GAAGH,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIK,OAAO,GAAGN,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,IAAIM,UAAU,GAAGP,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAAvC;;AAEA,IAAIO,YAAY,GAAGH,CAAC,CAACI,IAAF,CAAOJ,CAAC,CAACK,KAAT,CAAnB;AACA,IAAIC,aAAa,GAAGN,CAAC,CAACI,IAAF,CAAOJ,CAAC,CAACO,MAAT,CAApB;AACA;;;;;;;;AAQA,IAAIA,MAAM,GAAG,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACvC,SAAOT,CAAC,CAACU,MAAF,CAAS;AACdC,IAAAA,GAAG,EAAEX,CAAC,CAACY,GAAF,CAAM,CAAC,GAAGX,OAAO,CAAC,SAAD,CAAX,EAAwBQ,IAAxB,CAAN,CADS;AAEdI,IAAAA,MAAM,EAAEP,aAAa,CAACN,CAAC,CAACc,IAAF,CAAO,QAAP,EAAiBL,IAAjB,CAAD,CAFP;AAGdM,IAAAA,SAAS,EAAET,aAAa,CAACN,CAAC,CAACc,IAAF,CAAO,WAAP,EAAoBL,IAApB,CAAD,CAHV;AAIdO,IAAAA,UAAU,EAAEb,YAAY,CAACH,CAAC,CAACc,IAAF,CAAO,YAAP,EAAqBL,IAArB,CAAD,CAJV;AAKdQ,IAAAA,YAAY,EAAEjB,CAAC,CAACkB,OAAF,CAAUhB,UAAU,CAAC,SAAD,CAApB,EAAiCI,aAAa,CAACN,CAAC,CAACmB,GAAF,CAAMnB,CAAC,CAACkB,OAAF,CAAUlB,CAAC,CAACoB,GAAZ,EAAiBpB,CAAC,CAACY,GAAF,CAAMZ,CAAC,CAACqB,IAAF,CAAOrB,CAAC,CAACsB,MAAF,CAAS,EAAT,EAAa,cAAb,EAA6Bd,IAA7B,CAAP,KAA8C,CAApD,CAAjB,CAAN,EAAgFR,CAAC,CAACsB,MAAF,CAAS,EAAT,EAAa,cAAb,EAA6Bb,IAA7B,CAAhF,CAAD,CAA9C;AALA,GAAT,EAMJD,IANI,CAAP;AAOD,CARD;;AAUA,IAAIe,QAAQ,GAAGvB,CAAC,CAACwB,MAAF,CAAS,CAAT,EAAYjB,MAAZ,CAAf;;AAEAT,OAAO,CAAC,SAAD,CAAP,GAAqByB,QAArB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _length = _interopRequireDefault(require(\"./length\"));\n\nvar _normalize = _interopRequireDefault(require(\"../indices/normalize\"));\n\nvar reverseMerge = R.flip(R.merge);\nvar reverseConcat = R.flip(R.concat);\n/**\n * Concats two runs into one\n *\n * @param  {Object}  first run\n * @param  {Object}  second run\n * @return {Object}  concatenated run\n */\n\nvar concat = function concat(runA, runB) {\n  return R.evolve({\n    end: R.add((0, _length[\"default\"])(runB)),\n    glyphs: reverseConcat(R.prop('glyphs', runB)),\n    positions: reverseConcat(R.prop('positions', runB)),\n    attributes: reverseMerge(R.prop('attributes', runB)),\n    glyphIndices: R.compose(_normalize[\"default\"], reverseConcat(R.map(R.compose(R.inc, R.add(R.last(R.propOr([], 'glyphIndices', runA)) || 0)), R.propOr([], 'glyphIndices', runB))))\n  })(runA);\n};\n\nvar _default = R.curryN(2, concat);\n\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}