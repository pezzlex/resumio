{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nexport var ErrorCode;\n\n(function (ErrorCode) {\n  // When we have a placeholder but no value to format\n  ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\"; // When value supplied is invalid\n\n  ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\"; // When we need specific Intl API but it's not available\n\n  ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\n\nvar FormatError =\n/** @class */\nfunction (_super) {\n  __extends(FormatError, _super);\n\n  function FormatError(msg, code, originalMessage) {\n    var _this = _super.call(this, msg) || this;\n\n    _this.code = code;\n    _this.originalMessage = originalMessage;\n    return _this;\n  }\n\n  FormatError.prototype.toString = function () {\n    return \"[formatjs Error: \" + this.code + \"] \" + this.message;\n  };\n\n  return FormatError;\n}(Error);\n\nexport { FormatError };\n\nvar InvalidValueError =\n/** @class */\nfunction (_super) {\n  __extends(InvalidValueError, _super);\n\n  function InvalidValueError(variableId, value, options, originalMessage) {\n    return _super.call(this, \"Invalid values for \\\"\" + variableId + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(options).join('\", \"') + \"\\\"\", \"INVALID_VALUE\"\n    /* INVALID_VALUE */\n    , originalMessage) || this;\n  }\n\n  return InvalidValueError;\n}(FormatError);\n\nexport { InvalidValueError };\n\nvar InvalidValueTypeError =\n/** @class */\nfunction (_super) {\n  __extends(InvalidValueTypeError, _super);\n\n  function InvalidValueTypeError(value, type, originalMessage) {\n    return _super.call(this, \"Value for \\\"\" + value + \"\\\" must be of type \" + type, \"INVALID_VALUE\"\n    /* INVALID_VALUE */\n    , originalMessage) || this;\n  }\n\n  return InvalidValueTypeError;\n}(FormatError);\n\nexport { InvalidValueTypeError };\n\nvar MissingValueError =\n/** @class */\nfunction (_super) {\n  __extends(MissingValueError, _super);\n\n  function MissingValueError(variableId, originalMessage) {\n    return _super.call(this, \"The intl string context variable \\\"\" + variableId + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\", \"MISSING_VALUE\"\n    /* MISSING_VALUE */\n    , originalMessage) || this;\n  }\n\n  return MissingValueError;\n}(FormatError);\n\nexport { MissingValueError };","map":{"version":3,"sources":["../src/error.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,IAAkB,SAAlB;;AAAA,CAAA,UAAkB,SAAlB,EAA2B;AACzB;AACA,EAAA,SAAA,CAAA,eAAA,CAAA,GAAA,eAAA,CAFyB,CAGzB;;AACA,EAAA,SAAA,CAAA,eAAA,CAAA,GAAA,eAAA,CAJyB,CAKzB;;AACA,EAAA,SAAA,CAAA,kBAAA,CAAA,GAAA,kBAAA;AACD,CAPD,EAAkB,SAAS,KAAT,SAAS,GAAA,EAAA,CAA3B;;AASA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAU/B,WAAA,WAAA,CAAY,GAAZ,EAAyB,IAAzB,EAA0C,eAA1C,EAAkE;AAAlE,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,GAAN,KAAU,IADZ;;AAEE,IAAA,KAAI,CAAC,IAAL,GAAY,IAAZ;AACA,IAAA,KAAI,CAAC,eAAL,GAAuB,eAAvB;;AACD;;AACM,EAAA,WAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AACE,WAAO,sBAAoB,KAAK,IAAzB,GAA6B,IAA7B,GAAkC,KAAK,OAA9C;AACD,GAFM;;AAGT,SAAA,WAAA;AAAC,CAlBD,CAAiC,KAAjC,CAAA;;;;AAoBA,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;;AACrC,WAAA,iBAAA,CACE,UADF,EAEE,KAFF,EAGE,OAHF,EAIE,eAJF,EAI0B;WAExB,MAAA,CAAA,IAAA,CAAA,IAAA,EACE,0BAAuB,UAAvB,GAAiC,QAAjC,GAAwC,KAAxC,GAA6C,oBAA7C,GAAgE,MAAM,CAAC,IAAP,CAC9D,OAD8D,EAE9D,IAF8D,CAEzD,MAFyD,CAAhE,GAEc,IAHhB,EAGmB;AAAA;AAHnB,MAKE,eALF,KAMC,I;AACF;;AACH,SAAA,iBAAA;AAAC,CAfD,CAAuC,WAAvC,CAAA;;;;AAiBA,IAAA,qBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2C,EAAA,SAAA,CAAA,qBAAA,EAAA,MAAA,CAAA;;AACzC,WAAA,qBAAA,CAAY,KAAZ,EAAwB,IAAxB,EAAsC,eAAtC,EAA8D;WAC5D,MAAA,CAAA,IAAA,CAAA,IAAA,EACE,iBAAc,KAAd,GAAmB,qBAAnB,GAAwC,IAD1C,EACgD;AAAA;AADhD,MAGE,eAHF,KAIC,I;AACF;;AACH,SAAA,qBAAA;AAAC,CARD,CAA2C,WAA3C,CAAA;;;;AAUA,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;;AACrC,WAAA,iBAAA,CAAY,UAAZ,EAAgC,eAAhC,EAAwD;WACtD,MAAA,CAAA,IAAA,CAAA,IAAA,EACE,wCAAqC,UAArC,GAA+C,sCAA/C,GAAoF,eAApF,GAAmG,IADrG,EACwG;AAAA;AADxG,MAGE,eAHF,KAIC,I;AACF;;AACH,SAAA,iBAAA;AAAC,CARD,CAAuC,WAAvC,CAAA","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \" + this.code + \"] \" + this.message;\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\" + variableId + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(options).join('\", \"') + \"\\\"\", \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\" + value + \"\\\" must be of type \" + type, \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\" + variableId + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\", \"MISSING_VALUE\" /* MISSING_VALUE */, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n//# sourceMappingURL=error.js.map"]},"metadata":{},"sourceType":"module"}