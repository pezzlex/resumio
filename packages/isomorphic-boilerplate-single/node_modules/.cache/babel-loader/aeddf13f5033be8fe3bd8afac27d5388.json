{"ast":null,"code":"// Generated by CoffeeScript 1.7.1\n(function () {\n  var Bitfield;\n\n  Bitfield = function () {\n    function Bitfield(type, flags) {\n      this.type = type;\n      this.flags = flags != null ? flags : [];\n    }\n\n    Bitfield.prototype.decode = function (stream) {\n      var flag, i, res, val, _i, _len, _ref;\n\n      val = this.type.decode(stream);\n      res = {};\n      _ref = this.flags;\n\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        flag = _ref[i];\n\n        if (flag != null) {\n          res[flag] = !!(val & 1 << i);\n        }\n      }\n\n      return res;\n    };\n\n    Bitfield.prototype.size = function () {\n      return this.type.size();\n    };\n\n    Bitfield.prototype.encode = function (stream, keys) {\n      var flag, i, val, _i, _len, _ref;\n\n      val = 0;\n      _ref = this.flags;\n\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        flag = _ref[i];\n\n        if (flag != null) {\n          if (keys[flag]) {\n            val |= 1 << i;\n          }\n        }\n      }\n\n      return this.type.encode(stream, val);\n    };\n\n    return Bitfield;\n  }();\n\n  module.exports = Bitfield;\n}).call(this);","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/restructure/src/Bitfield.js"],"names":["Bitfield","type","flags","prototype","decode","stream","flag","i","res","val","_i","_len","_ref","length","size","encode","keys","module","exports","call"],"mappings":"AAAA;AACA,CAAC,YAAW;AACV,MAAIA,QAAJ;;AAEAA,EAAAA,QAAQ,GAAI,YAAW;AACrB,aAASA,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;AAC7B,WAAKD,IAAL,GAAYA,IAAZ;AACA,WAAKC,KAAL,GAAaA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,EAArC;AACD;;AAEDF,IAAAA,QAAQ,CAACG,SAAT,CAAmBC,MAAnB,GAA4B,UAASC,MAAT,EAAiB;AAC3C,UAAIC,IAAJ,EAAUC,CAAV,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,EAAvB,EAA2BC,IAA3B,EAAiCC,IAAjC;;AACAH,MAAAA,GAAG,GAAG,KAAKR,IAAL,CAAUG,MAAV,CAAiBC,MAAjB,CAAN;AACAG,MAAAA,GAAG,GAAG,EAAN;AACAI,MAAAA,IAAI,GAAG,KAAKV,KAAZ;;AACA,WAAKK,CAAC,GAAGG,EAAE,GAAG,CAAT,EAAYC,IAAI,GAAGC,IAAI,CAACC,MAA7B,EAAqCH,EAAE,GAAGC,IAA1C,EAAgDJ,CAAC,GAAG,EAAEG,EAAtD,EAA0D;AACxDJ,QAAAA,IAAI,GAAGM,IAAI,CAACL,CAAD,CAAX;;AACA,YAAID,IAAI,IAAI,IAAZ,EAAkB;AAChBE,UAAAA,GAAG,CAACF,IAAD,CAAH,GAAY,CAAC,EAAEG,GAAG,GAAI,KAAKF,CAAd,CAAb;AACD;AACF;;AACD,aAAOC,GAAP;AACD,KAZD;;AAcAR,IAAAA,QAAQ,CAACG,SAAT,CAAmBW,IAAnB,GAA0B,YAAW;AACnC,aAAO,KAAKb,IAAL,CAAUa,IAAV,EAAP;AACD,KAFD;;AAIAd,IAAAA,QAAQ,CAACG,SAAT,CAAmBY,MAAnB,GAA4B,UAASV,MAAT,EAAiBW,IAAjB,EAAuB;AACjD,UAAIV,IAAJ,EAAUC,CAAV,EAAaE,GAAb,EAAkBC,EAAlB,EAAsBC,IAAtB,EAA4BC,IAA5B;;AACAH,MAAAA,GAAG,GAAG,CAAN;AACAG,MAAAA,IAAI,GAAG,KAAKV,KAAZ;;AACA,WAAKK,CAAC,GAAGG,EAAE,GAAG,CAAT,EAAYC,IAAI,GAAGC,IAAI,CAACC,MAA7B,EAAqCH,EAAE,GAAGC,IAA1C,EAAgDJ,CAAC,GAAG,EAAEG,EAAtD,EAA0D;AACxDJ,QAAAA,IAAI,GAAGM,IAAI,CAACL,CAAD,CAAX;;AACA,YAAID,IAAI,IAAI,IAAZ,EAAkB;AAChB,cAAIU,IAAI,CAACV,IAAD,CAAR,EAAgB;AACdG,YAAAA,GAAG,IAAI,KAAKF,CAAZ;AACD;AACF;AACF;;AACD,aAAO,KAAKN,IAAL,CAAUc,MAAV,CAAiBV,MAAjB,EAAyBI,GAAzB,CAAP;AACD,KAbD;;AAeA,WAAOT,QAAP;AAED,GAzCU,EAAX;;AA2CAiB,EAAAA,MAAM,CAACC,OAAP,GAAiBlB,QAAjB;AAED,CAhDD,EAgDGmB,IAhDH,CAgDQ,IAhDR","sourcesContent":["// Generated by CoffeeScript 1.7.1\n(function() {\n  var Bitfield;\n\n  Bitfield = (function() {\n    function Bitfield(type, flags) {\n      this.type = type;\n      this.flags = flags != null ? flags : [];\n    }\n\n    Bitfield.prototype.decode = function(stream) {\n      var flag, i, res, val, _i, _len, _ref;\n      val = this.type.decode(stream);\n      res = {};\n      _ref = this.flags;\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        flag = _ref[i];\n        if (flag != null) {\n          res[flag] = !!(val & (1 << i));\n        }\n      }\n      return res;\n    };\n\n    Bitfield.prototype.size = function() {\n      return this.type.size();\n    };\n\n    Bitfield.prototype.encode = function(stream, keys) {\n      var flag, i, val, _i, _len, _ref;\n      val = 0;\n      _ref = this.flags;\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        flag = _ref[i];\n        if (flag != null) {\n          if (keys[flag]) {\n            val |= 1 << i;\n          }\n        }\n      }\n      return this.type.encode(stream, val);\n    };\n\n    return Bitfield;\n\n  })();\n\n  module.exports = Bitfield;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}