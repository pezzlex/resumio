{"ast":null,"code":"import \"antd/es/spin/style/css\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/notification/style/css\";\nimport _notification from \"antd/es/notification\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport _objectSpread from \"/Users/pezannekhambatta/Desktop/resumio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/pezannekhambatta/Desktop/resumio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/AddEditResume.js\";\nimport Box from '@iso/components/utility/box';\nimport LayoutContent from '@iso/components/utility/layoutContent';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport Loader from '@iso/components/utility/loader';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect, useParams, useRouteMatch } from 'react-router-dom';\nimport { addResume, clearCurrentResume, clearStatus, editResume, fetchResumeById, fetchResumes } from '../redux/resumes/actions';\nimport { Header, Title } from './AppLayout.style';\nimport InvoicePageWrapper from './Invoice/SingleInvoice.styles';\nimport RenderedPdf from './RenderedPdf/RenderedPdf';\nimport Styles from './AddEditResume.scss';\nimport { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer';\nimport { Prompt } from 'react-router';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nconst TextArea = _Input.TextArea;\nexport const unstructured = ({\n  contact: {\n    firstName,\n    lastName,\n    email,\n    phone\n  },\n  workExperience: {\n    headerName,\n    content\n  },\n  education,\n  projects,\n  skills,\n  fileName\n}) => ({\n  fileName,\n  firstName,\n  lastName,\n  phone,\n  email,\n  workHeaderName: headerName,\n  workExperienceContent: content,\n  educationContent: education.content,\n  educationHeaderName: education.headerName,\n  projectHeaderName: projects.headerName,\n  projectContent: projects.content,\n  skillsContent: skills.content,\n  skillsHeaderName: skills.headerName\n});\n\nconst AddEditResume = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        numPages = _useState2[0],\n        setNumPages = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pageNumber = _useState4[0],\n        setPageNumber = _useState4[1];\n\n  function onDocumentLoadSuccess({\n    numPages\n  }) {\n    setNumPages(numPages);\n  }\n\n  const dispatch = useDispatch();\n\n  const _useParams = useParams(),\n        resumeId = _useParams.resumeId;\n\n  const match = useRouteMatch();\n  const isAddResume = match.path.endsWith('create-resume');\n\n  const _useSelector = useSelector(state => state.resumeData),\n        error = _useSelector.error,\n        success = _useSelector.success,\n        currentResume = _useSelector.currentResume;\n\n  const _useSelector2 = useSelector(state => state.resumeData.resumes),\n        resumes = _useSelector2.resumes,\n        count = _useSelector2.count;\n\n  const _useSelector3 = useSelector(state => state.Auth),\n        firstName = _useSelector3.firstName,\n        lastName = _useSelector3.lastName,\n        email = _useSelector3.email;\n\n  const defaultFileNamePrefix = 'New Resume';\n  /**\n   * Generate default filenames like New Resume 1, New Resume 2, etc\n   * @param {list of resumes} resumes\n   */\n\n  const defaultFileName = resumes => {\n    let maxIndex = -1;\n    resumes.forEach(resume => {\n      if (resume.fileName.startsWith(defaultFileNamePrefix)) {\n        const fileIndex = resume.fileName === defaultFileNamePrefix ? 0 : parseInt(resume.fileName.substr(defaultFileNamePrefix.length + 1));\n\n        if (Number.isInteger(fileIndex)) {\n          maxIndex = Math.max(maxIndex, fileIndex);\n        }\n      }\n    });\n    return maxIndex === -1 ? defaultFileNamePrefix : \"\".concat(defaultFileNamePrefix, \" \").concat(maxIndex + 1);\n  };\n\n  const _useState5 = useState(defaultFileName(resumes)),\n        _useState6 = _slicedToArray(_useState5, 2),\n        fileName = _useState6[0],\n        setFileName = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isLoading = _useState8[0],\n        setLoading = _useState8[1]; // So it should be false initially, except if I'm on add resume page\n\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        isPageLoading = _useState10[0],\n        setPageLoading = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        redirectToReferrer = _useState12[0],\n        setRedirectToReferrer = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        isChangeDetected = _useState14[0],\n        setChangeDetected = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        isLiveChangeDetected = _useState16[0],\n        setLiveChangeDetected = _useState16[1]; // Hackey workaround for React-PDF bug\n\n\n  const _useState17 = useState(true),\n        _useState18 = _slicedToArray(_useState17, 2),\n        isPdfReady = _useState18[0],\n        setPdfReady = _useState18[1];\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        isUpdating = _useState20[0],\n        setUpdating = _useState20[1];\n\n  const _useState21 = useState(isAddResume ? {\n    fileName,\n    firstName,\n    lastName,\n    email,\n    workHeaderName: 'Work Experience',\n    workExperienceContent: []\n  } : _objectSpread({}, unstructured(currentResume))),\n        _useState22 = _slicedToArray(_useState21, 2),\n        liveResume = _useState22[0],\n        setLiveResume = _useState22[1];\n\n  const _useState23 = useState(false),\n        _useState24 = _slicedToArray(_useState23, 2),\n        isSpinning = _useState24[0],\n        setSpinning = _useState24[1];\n\n  const _useState25 = useState(true),\n        _useState26 = _slicedToArray(_useState25, 2),\n        canDownload = _useState26[0],\n        setCanDownload = _useState26[1];\n\n  const _useState27 = useState(liveResume),\n        _useState28 = _slicedToArray(_useState27, 2),\n        delayedResume = _useState28[0],\n        setDelayedResume = _useState28[1];\n\n  const _Form$useForm = _Form.useForm(),\n        _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n        form = _Form$useForm2[0];\n\n  useEffect(() => {\n    if (!isUpdating && isLiveChangeDetected) {\n      console.log('liveResume', delayedResume, 'latestValue', liveResume);\n      setTimeout(() => {\n        setUpdating(true);\n        setTimeout(() => {\n          setUpdating(false);\n          setLiveChangeDetected(false);\n        }, 2000);\n      }, 9000);\n      setSpinning(true);\n      setTimeout(() => {\n        setSpinning(false);\n      }, 500);\n      setDelayedResume(_objectSpread(_objectSpread({}, delayedResume), liveResume));\n    }\n  }, [isUpdating, isLiveChangeDetected]);\n  useEffect(() => {\n    // If initially edit, fetch resume => add currentResume\n    if (!isAddResume) {\n      dispatch(fetchResumeById(resumeId)); // If initially add, clear current resume\n    } else {\n      dispatch(clearCurrentResume());\n      setRedirectToReferrer(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (success || error) {\n      dispatch(clearStatus());\n      setLoading(false);\n      setPageLoading(false);\n    }\n  }, [success, error]);\n\n  const updateDelayedResume = () => {\n    setSpinning(true);\n    setTimeout(() => {\n      setSpinning(false);\n    }, 500);\n    setDelayedResume(_objectSpread(_objectSpread({}, delayedResume), liveResume));\n    setLiveChangeDetected(false);\n  };\n\n  const onFinish = values => {\n    const structured = ({\n      fileName,\n      firstName,\n      lastName,\n      phone,\n      email,\n      workHeaderName,\n      workExperienceContent,\n      educationContent,\n      educationHeaderName,\n      projectContent,\n      projectHeaderName,\n      skillsContent,\n      skillsHeaderName\n    }) => ({\n      contact: {\n        firstName,\n        lastName,\n        email,\n        phone\n      },\n      workExperience: {\n        headerName: workHeaderName,\n        content: workExperienceContent\n      },\n      education: {\n        headerName: educationHeaderName,\n        content: educationContent\n      },\n      projects: {\n        headerName: projectHeaderName,\n        content: projectContent\n      },\n      skills: {\n        headerName: skillsHeaderName,\n        content: skillsContent\n      },\n      fileName\n    });\n\n    if (isAddResume) {\n      dispatch(addResume(structured(values)));\n    } else {\n      setPdfReady(false);\n      setTimeout(() => {\n        setPdfReady(true);\n      }, 1);\n      dispatch(editResume(resumeId, structured(values)));\n      updateDelayedResume();\n    }\n\n    setLoading(true);\n  };\n\n  const download = () => {\n    setCanDownload(false);\n    updateDelayedResume();\n    setTimeout(() => {\n      setCanDownload(true);\n    }, 200);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  useEffect(() => {\n    if (error) {\n      _notification['error']({\n        message: 'Error',\n        description: error\n      });\n    }\n  }, [error]);\n  useEffect(() => {\n    if (success) {\n      dispatch(fetchResumes);\n      if (isAddResume) setRedirectToReferrer(true);\n\n      if (!isAddResume) {\n        setChangeDetected(false);\n        setLiveChangeDetected(false);\n      }\n    }\n  }, [success]);\n\n  if (redirectToReferrer && currentResume) {\n    let from = {\n      pathname: \"/dashboard/edit-resume/\".concat(currentResume._id)\n    };\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: from,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Prompt, {\n    when: isChangeDetected,\n    message: \"You have unsaved changes. Are you sure you want to leave?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LayoutContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, !isPageLoading ? isAddResume || currentResume ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    layout: \"vertical\",\n    initialValues: liveResume,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    onValuesChange: value => {\n      setLiveResume(_objectSpread(_objectSpread({}, liveResume), value));\n      setChangeDetected(true);\n      setLiveChangeDetected(true);\n    },\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 23\n    }\n  }, isAddResume ? fileName ? \"Build Resume \\\"\".concat(fileName, \"\\\"\") : 'Build Resume' : \"Edit Resume \\\"\".concat(currentResume.fileName, \"\\\"\")), /*#__PURE__*/React.createElement(InvoicePageWrapper, {\n    className: \"InvoicePageWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageHeader viewMode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, !isAddResume ? /*#__PURE__*/React.createElement(React.Fragment, null, isChangeDetected ? /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard/resume/\".concat(resumeId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    className: \"isoGoInvoBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 35\n    }\n  }, \"Cancel\")) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard/resume/\".concat(resumeId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    className: \"isoGoInvoBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 35\n    }\n  }, \"Done\")), isChangeDetected ? /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    loading: isLoading,\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  }, \"Save Changes\") : /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 33\n    }\n  }, \"Changes Saved!\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    className: \"isoGoInvoBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 33\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    loading: isLoading,\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 31\n    }\n  }, \"Save\"))))), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InvoicePageWrapper, {\n    className: \"editView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"File Name\",\n    name: \"fileName\",\n    rules: [{\n      required: true,\n      message: 'Please input a file name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"File Name\",\n    onChange: e => {\n      setFileName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 35\n    }\n  })))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 29\n    }\n  }, \"Contact Information\"), /*#__PURE__*/React.createElement(_Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"First Name\",\n    name: \"firstName\",\n    rules: [{\n      required: true,\n      message: 'Please input your first name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(_Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Last Name\",\n    name: \"lastName\",\n    rules: [{\n      required: true,\n      message: 'Please input your last name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(_Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Email\",\n    name: \"email\",\n    rules: [{\n      type: 'email'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(_Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Contact Number\",\n    name: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Contact Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(_Col, {\n    xl: 24,\n    lg: 24,\n    md: 24,\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 33\n    }\n  }, \"Work Experience\"), /*#__PURE__*/React.createElement(_Form.List, {\n    name: \"workExperienceContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 33\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 39\n      }\n    }, fields.map((field, index) => /*#__PURE__*/React.createElement(_Row, {\n      key: field.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      xl: 23,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 45\n      }\n    }, \"Job \", index + 1), /*#__PURE__*/React.createElement(_Col, {\n      xl: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      className: \"dynamic-delete-button\",\n      onClick: () => {\n        remove(field.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 47\n      }\n    })), /*#__PURE__*/React.createElement(_Col, {\n      xl: 24,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Job Title\",\n      name: [field.name, 'jobTitle'],\n      fieldKey: [field.fieldKey, 'jobTitle'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Job Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 24,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Company Name\",\n      name: [field.name, 'companyName'],\n      fieldKey: [field.fieldKey, 'companyName'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Employer Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 12,\n      lg: 12,\n      md: 12,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Start Date\",\n      name: [field.name, 'startDate'],\n      fieldKey: [field.fieldKey, 'startDate'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Start Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 12,\n      lg: 12,\n      md: 12,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"End Date\",\n      name: [field.name, 'endDate'],\n      fieldKey: [field.fieldKey, 'endDate'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"End Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 24,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Description\",\n      name: [field.name, 'description'],\n      fieldKey: [field.fieldKey, 'description'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 4,\n      placeholder: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 49\n      }\n    }))))), /*#__PURE__*/React.createElement(_Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 45\n      }\n    }), \" Add Work Experience\")));\n  })), /*#__PURE__*/React.createElement(_Col, {\n    xl: 24,\n    lg: 24,\n    md: 24,\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 33\n    }\n  }, \"Education\"), /*#__PURE__*/React.createElement(_Form.List, {\n    name: \"educationContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 33\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 39\n      }\n    }, fields.map((field, index) => /*#__PURE__*/React.createElement(_Row, {\n      key: field.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      xl: 23,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 45\n      }\n    }, \"Education \", index + 1), /*#__PURE__*/React.createElement(_Col, {\n      xl: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      className: \"dynamic-delete-button\",\n      onClick: () => {\n        remove(field.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 47\n      }\n    })), /*#__PURE__*/React.createElement(_Col, {\n      xl: 24,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"School Name\",\n      name: [field.name, 'collegeName'],\n      fieldKey: [field.fieldKey, 'collegeName'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"School Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 12,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"GPA\",\n      name: [field.name, 'gpa'],\n      fieldKey: [field.fieldKey, 'gpa'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"GPA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 12,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Degree\",\n      name: [field.name, 'degree'],\n      fieldKey: [field.fieldKey, 'degree'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Degree\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 12,\n      lg: 12,\n      md: 12,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Start Date\",\n      name: [field.name, 'startDate'],\n      fieldKey: [field.fieldKey, 'startDate'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Start Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 12,\n      lg: 12,\n      md: 12,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"End Date\",\n      name: [field.name, 'endDate'],\n      fieldKey: [field.fieldKey, 'endDate'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"End Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 24,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Summary\",\n      name: [field.name, 'summary'],\n      fieldKey: [field.fieldKey, 'summary'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 4,\n      placeholder: \"Summary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 49\n      }\n    }))))), /*#__PURE__*/React.createElement(_Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 45\n      }\n    }), \" Add Education\")));\n  })), /*#__PURE__*/React.createElement(_Col, {\n    xl: 24,\n    lg: 24,\n    md: 24,\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 33\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(_Form.List, {\n    name: \"projectContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 33\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 39\n      }\n    }, fields.map((field, index) => /*#__PURE__*/React.createElement(_Row, {\n      key: field.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      xl: 23,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 45\n      }\n    }, \"Project \", index + 1), /*#__PURE__*/React.createElement(_Col, {\n      xl: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      className: \"dynamic-delete-button\",\n      onClick: () => {\n        remove(field.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 47\n      }\n    })), /*#__PURE__*/React.createElement(_Col, {\n      xl: 24,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Project Title\",\n      name: [field.name, 'title'],\n      fieldKey: [field.fieldKey, 'title'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Project Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 24,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Link\",\n      name: [field.name, 'link'],\n      fieldKey: [field.fieldKey, 'link'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 12,\n      lg: 12,\n      md: 12,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Start Date\",\n      name: [field.name, 'startDate'],\n      fieldKey: [field.fieldKey, 'startDate'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Start Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 12,\n      lg: 12,\n      md: 12,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"End Date\",\n      name: [field.name, 'endDate'],\n      fieldKey: [field.fieldKey, 'endDate'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"End Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 24,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Summary\",\n      name: [field.name, 'summary'],\n      fieldKey: [field.fieldKey, 'summary'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 4,\n      placeholder: \"Summary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 49\n      }\n    }))))), /*#__PURE__*/React.createElement(_Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 45\n      }\n    }), \" Add Project\")));\n  })), /*#__PURE__*/React.createElement(_Col, {\n    xl: 24,\n    lg: 24,\n    md: 24,\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 33\n    }\n  }, \"Skills\"), /*#__PURE__*/React.createElement(_Form.List, {\n    name: \"skillsContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 33\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 39\n      }\n    }, fields.map((field, index) => /*#__PURE__*/React.createElement(_Row, {\n      key: field.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      xl: 23,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 45\n      }\n    }, \"Skill \", index + 1), /*#__PURE__*/React.createElement(_Col, {\n      xl: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      className: \"dynamic-delete-button\",\n      onClick: () => {\n        remove(field.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 47\n      }\n    })), /*#__PURE__*/React.createElement(_Col, {\n      xl: 24,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Skill Title\",\n      name: [field.name, 'subHeader'],\n      fieldKey: [field.fieldKey, 'title'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Skill Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(_Col, {\n      xl: 24,\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      label: \"Details\",\n      name: [field.name, 'details'],\n      fieldKey: [field.fieldKey, 'details'] // rules={rules}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 49\n      }\n    }))))), /*#__PURE__*/React.createElement(_Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 45\n      }\n    }), \" Add Skill\")));\n  })))), /*#__PURE__*/React.createElement(_Col, {\n    flex: \"auto\",\n    className: \"iframeFull\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 27\n    }\n  }, // isReady\n  isPdfReady ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Spin, {\n    spinning: isSpinning // delay={700}\n    ,\n    tip: \"Updating Preview...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(PDFViewer, {\n    height: \"700\",\n    width: \"95%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(RenderedPdf, {\n    resume: delayedResume,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 39\n    }\n  })), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    loading: !canDownload,\n    onClick: download,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(PDFDownloadLink, {\n    document: /*#__PURE__*/React.createElement(RenderedPdf, {\n      resume: delayedResume // resume={{ fileName: 'dummy' }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 43\n      }\n    }),\n    fileName: \"\".concat(delayedResume.fileName, \".pdf\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 39\n    }\n  }, \"Download!\")))) : /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 33\n    }\n  }))))))) : /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 19\n    }\n  }, \"Resume not found!\"), /*#__PURE__*/React.createElement(InvoicePageWrapper, {\n    className: \"InvoicePageWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageHeader viewMode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    className: \"isoGoInvoBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 922,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 27\n    }\n  }, \"Back to My Resumes\")))))) : /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default AddEditResume;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/AddEditResume.js"],"names":["Box","LayoutContent","LayoutContentWrapper","Loader","React","useEffect","useState","useDispatch","useSelector","Link","Redirect","useParams","useRouteMatch","addResume","clearCurrentResume","clearStatus","editResume","fetchResumeById","fetchResumes","Header","Title","InvoicePageWrapper","RenderedPdf","Styles","PDFDownloadLink","PDFViewer","Prompt","MinusCircleOutlined","PlusOutlined","TextArea","unstructured","contact","firstName","lastName","email","phone","workExperience","headerName","content","education","projects","skills","fileName","workHeaderName","workExperienceContent","educationContent","educationHeaderName","projectHeaderName","projectContent","skillsContent","skillsHeaderName","AddEditResume","numPages","setNumPages","pageNumber","setPageNumber","onDocumentLoadSuccess","dispatch","resumeId","match","isAddResume","path","endsWith","state","resumeData","error","success","currentResume","resumes","count","Auth","defaultFileNamePrefix","defaultFileName","maxIndex","forEach","resume","startsWith","fileIndex","parseInt","substr","length","Number","isInteger","Math","max","setFileName","isLoading","setLoading","isPageLoading","setPageLoading","redirectToReferrer","setRedirectToReferrer","isChangeDetected","setChangeDetected","isLiveChangeDetected","setLiveChangeDetected","isPdfReady","setPdfReady","isUpdating","setUpdating","liveResume","setLiveResume","isSpinning","setSpinning","canDownload","setCanDownload","delayedResume","setDelayedResume","useForm","form","console","log","setTimeout","updateDelayedResume","onFinish","values","structured","download","onFinishFailed","errorInfo","message","description","from","pathname","_id","value","required","e","target","type","fields","add","remove","map","field","index","key","name","fieldKey","width"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,6BAAhB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAWA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,aAApC,QAAyD,kBAAzD;AACA,SACEC,SADF,EAEEC,kBAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,eALF,EAMEC,YANF,QAOO,0BAPP;AAQA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,qBAA3C;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,mBAAlD;MAEQC,Q,UAAAA,Q;AACR,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC3BC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,GADkB;AAE3BC,EAAAA,cAAc,EAAE;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAFW;AAG3BC,EAAAA,SAH2B;AAI3BC,EAAAA,QAJ2B;AAK3BC,EAAAA,MAL2B;AAM3BC,EAAAA;AAN2B,CAAD,MAOrB;AACLA,EAAAA,QADK;AAELV,EAAAA,SAFK;AAGLC,EAAAA,QAHK;AAILE,EAAAA,KAJK;AAKLD,EAAAA,KALK;AAMLS,EAAAA,cAAc,EAAEN,UANX;AAOLO,EAAAA,qBAAqB,EAAEN,OAPlB;AAQLO,EAAAA,gBAAgB,EAAEN,SAAS,CAACD,OARvB;AASLQ,EAAAA,mBAAmB,EAAEP,SAAS,CAACF,UAT1B;AAULU,EAAAA,iBAAiB,EAAEP,QAAQ,CAACH,UAVvB;AAWLW,EAAAA,cAAc,EAAER,QAAQ,CAACF,OAXpB;AAYLW,EAAAA,aAAa,EAAER,MAAM,CAACH,OAZjB;AAaLY,EAAAA,gBAAgB,EAAET,MAAM,CAACJ;AAbpB,CAPqB,CAArB;;AAuBP,MAAMc,aAAa,GAAG,MAAM;AAAA,oBACM7C,QAAQ,CAAC,IAAD,CADd;AAAA;AAAA,QACnB8C,QADmB;AAAA,QACTC,WADS;;AAAA,qBAEU/C,QAAQ,CAAC,CAAD,CAFlB;AAAA;AAAA,QAEnBgD,UAFmB;AAAA,QAEPC,aAFO;;AAI1B,WAASC,qBAAT,CAA+B;AAAEJ,IAAAA;AAAF,GAA/B,EAA6C;AAC3CC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD;;AACD,QAAMK,QAAQ,GAAGlD,WAAW,EAA5B;;AAP0B,qBAQLI,SAAS,EARJ;AAAA,QAQlB+C,QARkB,cAQlBA,QARkB;;AAU1B,QAAMC,KAAK,GAAG/C,aAAa,EAA3B;AACA,QAAMgD,WAAW,GAAGD,KAAK,CAACE,IAAN,CAAWC,QAAX,CAAoB,eAApB,CAApB;;AAX0B,uBAYgBtD,WAAW,CAClDuD,KAAD,IAAWA,KAAK,CAACC,UADkC,CAZ3B;AAAA,QAYlBC,KAZkB,gBAYlBA,KAZkB;AAAA,QAYXC,OAZW,gBAYXA,OAZW;AAAA,QAYFC,aAZE,gBAYFA,aAZE;;AAAA,wBAeC3D,WAAW,CAAEuD,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBI,OAA7B,CAfZ;AAAA,QAelBA,OAfkB,iBAelBA,OAfkB;AAAA,QAeTC,KAfS,iBAeTA,KAfS;;AAAA,wBAiBa7D,WAAW,CAAEuD,KAAD,IAAWA,KAAK,CAACO,IAAlB,CAjBxB;AAAA,QAiBlBtC,SAjBkB,iBAiBlBA,SAjBkB;AAAA,QAiBPC,QAjBO,iBAiBPA,QAjBO;AAAA,QAiBGC,KAjBH,iBAiBGA,KAjBH;;AAkB1B,QAAMqC,qBAAqB,GAAG,YAA9B;AACA;;;;;AAIA,QAAMC,eAAe,GAAIJ,OAAD,IAAa;AACnC,QAAIK,QAAQ,GAAG,CAAC,CAAhB;AACAL,IAAAA,OAAO,CAACM,OAAR,CAAiBC,MAAD,IAAY;AAC1B,UAAIA,MAAM,CAACjC,QAAP,CAAgBkC,UAAhB,CAA2BL,qBAA3B,CAAJ,EAAuD;AACrD,cAAMM,SAAS,GACbF,MAAM,CAACjC,QAAP,KAAoB6B,qBAApB,GACI,CADJ,GAEIO,QAAQ,CAACH,MAAM,CAACjC,QAAP,CAAgBqC,MAAhB,CAAuBR,qBAAqB,CAACS,MAAtB,GAA+B,CAAtD,CAAD,CAHd;;AAIA,YAAIC,MAAM,CAACC,SAAP,CAAiBL,SAAjB,CAAJ,EAAiC;AAC/BJ,UAAAA,QAAQ,GAAGU,IAAI,CAACC,GAAL,CAASX,QAAT,EAAmBI,SAAnB,CAAX;AACD;AACF;AACF,KAVD;AAWA,WAAOJ,QAAQ,KAAK,CAAC,CAAd,GACHF,qBADG,aAEAA,qBAFA,cAEyBE,QAAQ,GAAG,CAFpC,CAAP;AAGD,GAhBD;;AAvB0B,qBAwCMnE,QAAQ,CAACkE,eAAe,CAACJ,OAAD,CAAhB,CAxCd;AAAA;AAAA,QAwCnB1B,QAxCmB;AAAA,QAwCT2C,WAxCS;;AAAA,qBA0CM/E,QAAQ,CAAC,KAAD,CA1Cd;AAAA;AAAA,QA0CnBgF,SA1CmB;AAAA,QA0CRC,UA1CQ,kBA2C1B;;;AA3C0B,qBA4CcjF,QAAQ,CAAC,IAAD,CA5CtB;AAAA;AAAA,QA4CnBkF,aA5CmB;AAAA,QA4CJC,cA5CI;;AAAA,sBA6C0BnF,QAAQ,CAAC,KAAD,CA7ClC;AAAA;AAAA,QA6CnBoF,kBA7CmB;AAAA,QA6CCC,qBA7CD;;AAAA,sBA8CoBrF,QAAQ,CAAC,KAAD,CA9C5B;AAAA;AAAA,QA8CnBsF,gBA9CmB;AAAA,QA8CDC,iBA9CC;;AAAA,sBA+C4BvF,QAAQ,CAAC,KAAD,CA/CpC;AAAA;AAAA,QA+CnBwF,oBA/CmB;AAAA,QA+CGC,qBA/CH,mBAgD1B;;;AAhD0B,sBAiDQzF,QAAQ,CAAC,IAAD,CAjDhB;AAAA;AAAA,QAiDnB0F,UAjDmB;AAAA,QAiDPC,WAjDO;;AAAA,sBAkDQ3F,QAAQ,CAAC,KAAD,CAlDhB;AAAA;AAAA,QAkDnB4F,UAlDmB;AAAA,QAkDPC,WAlDO;;AAAA,sBAmDU7F,QAAQ,CAC1CsD,WAAW,GACP;AACElB,IAAAA,QADF;AAEEV,IAAAA,SAFF;AAGEC,IAAAA,QAHF;AAIEC,IAAAA,KAJF;AAKES,IAAAA,cAAc,EAAE,iBALlB;AAMEC,IAAAA,qBAAqB,EAAE;AANzB,GADO,qBAUFd,YAAY,CAACqC,aAAD,CAVV,CAD+B,CAnDlB;AAAA;AAAA,QAmDnBiC,UAnDmB;AAAA,QAmDPC,aAnDO;;AAAA,sBAiEQ/F,QAAQ,CAAC,KAAD,CAjEhB;AAAA;AAAA,QAiEnBgG,UAjEmB;AAAA,QAiEPC,WAjEO;;AAAA,sBAkEYjG,QAAQ,CAAC,IAAD,CAlEpB;AAAA;AAAA,QAkEnBkG,WAlEmB;AAAA,QAkENC,cAlEM;;AAAA,sBAoEgBnG,QAAQ,CAAC8F,UAAD,CApExB;AAAA;AAAA,QAoEnBM,aApEmB;AAAA,QAoEJC,gBApEI;;AAAA,wBAsEX,MAAKC,OAAL,EAtEW;AAAA;AAAA,QAsEnBC,IAtEmB;;AAwE1BxG,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC6F,UAAD,IAAeJ,oBAAnB,EAAyC;AACvCgB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,aAA1B,EAAyC,aAAzC,EAAwDN,UAAxD;AACAY,MAAAA,UAAU,CAAC,MAAM;AACfb,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAa,QAAAA,UAAU,CAAC,MAAM;AACfb,UAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,UAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,SAHS,EAGP,IAHO,CAAV;AAID,OANS,EAMP,IANO,CAAV;AAOAQ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAS,MAAAA,UAAU,CAAC,MAAM;AACfT,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD,OAFS,EAEP,GAFO,CAAV;AAGAI,MAAAA,gBAAgB,iCAAMD,aAAN,GAAwBN,UAAxB,EAAhB;AACD;AACF,GAhBQ,EAgBN,CAACF,UAAD,EAAaJ,oBAAb,CAhBM,CAAT;AAkBAzF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACuD,WAAL,EAAkB;AAChBH,MAAAA,QAAQ,CAACxC,eAAe,CAACyC,QAAD,CAAhB,CAAR,CADgB,CAEhB;AACD,KAHD,MAGO;AACLD,MAAAA,QAAQ,CAAC3C,kBAAkB,EAAnB,CAAR;AACA6E,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AACF,GATQ,EASN,EATM,CAAT;AAWAtF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6D,OAAO,IAAID,KAAf,EAAsB;AACpBR,MAAAA,QAAQ,CAAC1C,WAAW,EAAZ,CAAR;AACAwE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GANQ,EAMN,CAACvB,OAAD,EAAUD,KAAV,CANM,CAAT;;AAQA,QAAMgD,mBAAmB,GAAG,MAAM;AAChCV,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAS,IAAAA,UAAU,CAAC,MAAM;AACfT,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFS,EAEP,GAFO,CAAV;AAGAI,IAAAA,gBAAgB,iCAAMD,aAAN,GAAwBN,UAAxB,EAAhB;AACAL,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAPD;;AASA,QAAMmB,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAMC,UAAU,GAAG,CAAC;AAClB1E,MAAAA,QADkB;AAElBV,MAAAA,SAFkB;AAGlBC,MAAAA,QAHkB;AAIlBE,MAAAA,KAJkB;AAKlBD,MAAAA,KALkB;AAMlBS,MAAAA,cANkB;AAOlBC,MAAAA,qBAPkB;AAQlBC,MAAAA,gBARkB;AASlBC,MAAAA,mBATkB;AAUlBE,MAAAA,cAVkB;AAWlBD,MAAAA,iBAXkB;AAYlBE,MAAAA,aAZkB;AAalBC,MAAAA;AAbkB,KAAD,MAcZ;AACLnB,MAAAA,OAAO,EAAE;AACPC,QAAAA,SADO;AAEPC,QAAAA,QAFO;AAGPC,QAAAA,KAHO;AAIPC,QAAAA;AAJO,OADJ;AAOLC,MAAAA,cAAc,EAAE;AACdC,QAAAA,UAAU,EAAEM,cADE;AAEdL,QAAAA,OAAO,EAAEM;AAFK,OAPX;AAWLL,MAAAA,SAAS,EAAE;AACTF,QAAAA,UAAU,EAAES,mBADH;AAETR,QAAAA,OAAO,EAAEO;AAFA,OAXN;AAeLL,MAAAA,QAAQ,EAAE;AACRH,QAAAA,UAAU,EAAEU,iBADJ;AAERT,QAAAA,OAAO,EAAEU;AAFD,OAfL;AAmBLP,MAAAA,MAAM,EAAE;AACNJ,QAAAA,UAAU,EAAEa,gBADN;AAENZ,QAAAA,OAAO,EAAEW;AAFH,OAnBH;AAuBLP,MAAAA;AAvBK,KAdY,CAAnB;;AAuCA,QAAIkB,WAAJ,EAAiB;AACfH,MAAAA,QAAQ,CAAC5C,SAAS,CAACuG,UAAU,CAACD,MAAD,CAAX,CAAV,CAAR;AACD,KAFD,MAEO;AACLlB,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAe,MAAAA,UAAU,CAAC,MAAM;AACff,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAFS,EAEP,CAFO,CAAV;AAGAxC,MAAAA,QAAQ,CAACzC,UAAU,CAAC0C,QAAD,EAAW0D,UAAU,CAACD,MAAD,CAArB,CAAX,CAAR;AACAF,MAAAA,mBAAmB;AACpB;;AACD1B,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAnDD;;AAqDA,QAAM8B,QAAQ,GAAG,MAAM;AACrBZ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAQ,IAAAA,mBAAmB;AACnBD,IAAAA,UAAU,CAAC,MAAM;AACfP,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAND;;AAQA,QAAMa,cAAc,GAAIC,SAAD,IAAe;AACpCT,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBQ,SAAvB;AACD,GAFD;;AAIAlH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4D,KAAJ,EAAW;AACT,oBAAa,OAAb,EAAsB;AACpBuD,QAAAA,OAAO,EAAE,OADW;AAEpBC,QAAAA,WAAW,EAAExD;AAFO,OAAtB;AAID;AACF,GAPQ,EAON,CAACA,KAAD,CAPM,CAAT;AAQA5D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6D,OAAJ,EAAa;AACXT,MAAAA,QAAQ,CAACvC,YAAD,CAAR;AACA,UAAI0C,WAAJ,EAAiB+B,qBAAqB,CAAC,IAAD,CAArB;;AACjB,UAAI,CAAC/B,WAAL,EAAkB;AAChBiC,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,QAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AACF;AACF,GATQ,EASN,CAAC7B,OAAD,CATM,CAAT;;AAWA,MAAIwB,kBAAkB,IAAIvB,aAA1B,EAAyC;AACvC,QAAIuD,IAAI,GAAG;AACTC,MAAAA,QAAQ,mCAA4BxD,aAAa,CAACyD,GAA1C;AADC,KAAX;AAIA,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEF,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,uDACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE9B,gBADR;AAEE,IAAA,OAAO,EAAC,2DAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,aAAD,GACC5B,WAAW,IAAIO,aAAf,gBACE,uDACE;AACE,IAAA,IAAI,EAAE0C,IADR;AAEE,IAAA,MAAM,EAAC,UAFT;AAGE,IAAA,aAAa,EAAET,UAHjB;AAIE,IAAA,QAAQ,EAAEc,QAJZ;AAKE,IAAA,cAAc,EAAEI,cALlB;AAME,IAAA,cAAc,EAAGO,KAAD,IAAW;AACzBxB,MAAAA,aAAa,iCAAMD,UAAN,GAAqByB,KAArB,EAAb;AACAhC,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,KAVH;AAWE,IAAA,kBAAkB,MAXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnC,WAAW,GACRlB,QAAQ,4BACWA,QADX,UAEN,cAHM,2BAIQyB,aAAa,CAACzB,QAJtB,OADd,CADF,eAQE,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAC,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACkB,WAAD,gBACC,0CACGgC,gBAAgB,gBACf,oBAAC,IAAD;AAAM,IAAA,EAAE,8BAAuBlC,QAAvB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADe,gBAOf,oBAAC,IAAD;AAAM,IAAA,EAAE,8BAAuBA,QAAvB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CARJ,EAaGkC,gBAAgB,gBACf;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAEN,SAFX;AAGE,IAAA,QAAQ,EAAC,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADe,gBASf;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBJ,CADD,gBA6BC,uDACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,eAIE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAEA,SAFX;AAGE,IAAA,QAAQ,EAAC,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CA9BJ,CADF,CARF,CAbF,eAqEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,0BAAM,IAAN;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAE,CACL;AACEwC,MAAAA,QAAQ,EAAE,IADZ;AAEEN,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AACE,IAAA,WAAW,EAAC,WADd;AAEE,IAAA,QAAQ,EAAGO,CAAD,IAAO;AACf1C,MAAAA,WAAW,CAAC0C,CAAC,CAACC,MAAF,CAASH,KAAV,CAAX;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF,CADF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAxBF,eAyBE;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,0BAAM,IAAN;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEEN,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAO,IAAA,WAAW,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF,eAeE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,0BAAM,IAAN;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAE,CACL;AACEM,MAAAA,QAAQ,EAAE,IADZ;AAEEN,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAO,IAAA,WAAW,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CAfF,eA6BE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,0BAAM,IAAN;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAE,CAAC;AAAES,MAAAA,IAAI,EAAE;AAAR,KAAD,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAO,IAAA,WAAW,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CA7BF,eAsCE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,0BAAM,IAAN;AAAW,IAAA,KAAK,EAAC,gBAAjB;AAAkC,IAAA,IAAI,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,WAAW,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAtCF,eA4CE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE,0BAAM,IAAN;AAAW,IAAA,IAAI,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,MAAD,EAAS;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAT,KAA6B;AAC5B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAkBD,KAAK,GAAG,CAA1B,CADF,eAEE;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,mBAAD;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbH,QAAAA,MAAM,CAACE,KAAK,CAACG,IAAP,CAAN;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,eAUE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,IAAI,EAAE,CAACH,KAAK,CAACG,IAAP,EAAa,UAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,UAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CAVF,eAwBE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,IAAI,EAAE,CACJJ,KAAK,CAACG,IADF,EAEJ,aAFI,CAFR;AAME,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,aAFQ,CANZ,CAUE;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE;AAAO,MAAA,WAAW,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,CAxBF,eAwCE;AACE,MAAA,EAAE,EAAE,EADN;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,EAAE,EAAE,EAHN;AAIE,MAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,WAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,WAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CANF,CAxCF,eA2DE;AACE,MAAA,EAAE,EAAE,EADN;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,EAAE,EAAE,EAHN;AAIE,MAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,SAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,SAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CANF,CA3DF,eA8EE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,IAAI,EAAE,CACJJ,KAAK,CAACG,IADF,EAEJ,aAFI,CAFR;AAME,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,aAFQ,CANZ,CAUE;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,CADR;AAEE,MAAA,WAAW,EAAC,aAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,CA9EF,CADD,CADH,eAsGE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAM;AACbP,QAAAA,GAAG;AACJ,OAJH;AAKE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,yBADF,CAtGF,CADF;AAoHD,GAtHH,CAHF,CA5CF,eAyKE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,0BAAM,IAAN;AAAW,IAAA,IAAI,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACT,MAAD,EAAS;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAT,KAA6B;AAC5B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaD,KAAK,GAAG,CADrB,CADF,eAIE;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,mBAAD;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbH,QAAAA,MAAM,CAACE,KAAK,CAACG,IAAP,CAAN;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,eAYE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,IAAI,EAAE,CACJH,KAAK,CAACG,IADF,EAEJ,aAFI,CAFR;AAME,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,aAFQ,CANZ,CAUE;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE;AAAO,MAAA,WAAW,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,CAZF,eA6BE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,KADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,KAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,KAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CA7BF,eA0CE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,QAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,QAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CA1CF,eAuDE;AACE,MAAA,EAAE,EAAE,EADN;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,EAAE,EAAE,EAHN;AAIE,MAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,WAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,WAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CANF,CAvDF,eA0EE;AACE,MAAA,EAAE,EAAE,EADN;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,EAAE,EAAE,EAHN;AAIE,MAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,SAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,SAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CANF,CA1EF,eA6FE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,SAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,SAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,CADR;AAEE,MAAA,WAAW,EAAC,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CA7FF,CADD,CADH,eAkHE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAM;AACbP,QAAAA,GAAG;AACJ,OAJH;AAKE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,mBADF,CAlHF,CADF;AAgID,GAlIH,CAHF,CAzKF,eAkTE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,0BAAM,IAAN;AAAW,IAAA,IAAI,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACT,MAAD,EAAS;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAT,KAA6B;AAC5B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWD,KAAK,GAAG,CADnB,CADF,eAIE;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,mBAAD;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbH,QAAAA,MAAM,CAACE,KAAK,CAACG,IAAP,CAAN;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,eAYE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,IAAI,EAAE,CAACH,KAAK,CAACG,IAAP,EAAa,OAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,OAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CAZF,eA0BE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,MAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,MAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CA1BF,eAwCE;AACE,MAAA,EAAE,EAAE,EADN;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,EAAE,EAAE,EAHN;AAIE,MAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,WAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,WAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CANF,CAxCF,eA2DE;AACE,MAAA,EAAE,EAAE,EADN;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,EAAE,EAAE,EAHN;AAIE,MAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,SAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,SAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CANF,CA3DF,eA8EE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,SAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,SAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,CADR;AAEE,MAAA,WAAW,EAAC,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CA9EF,CADD,CADH,eAmGE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAM;AACbP,QAAAA,GAAG;AACJ,OAJH;AAKE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,iBADF,CAnGF,CADF;AAiHD,GAnHH,CAHF,CAlTF,eA4aE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,0BAAM,IAAN;AAAW,IAAA,IAAI,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACT,MAAD,EAAS;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAT,KAA6B;AAC5B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAoBD,KAAK,GAAG,CAA5B,CADF,eAEE;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,mBAAD;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbH,QAAAA,MAAM,CAACE,KAAK,CAACG,IAAP,CAAN;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,eAUE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,IAAI,EAAE,CAACH,KAAK,CAACG,IAAP,EAAa,WAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,OAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CAVF,eAwBE;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,0BAAM,IAAN;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,EAAE,CAACJ,KAAK,CAACG,IAAP,EAAa,SAAb,CAFR;AAGE,MAAA,QAAQ,EAAE,CACRH,KAAK,CAACI,QADE,EAER,SAFQ,CAHZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,WAAW,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CAxBF,CADD,CADH,eA0CE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAM;AACbP,QAAAA,GAAG;AACJ,OAJH;AAKE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eADF,CA1CF,CADF;AAwDD,GA1DH,CAHF,CA5aF,CAzBF,CADF,eAygBE;AAAK,IAAA,IAAI,EAAC,MAAV;AAAiB,IAAA,SAAS,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AACA3C,EAAAA,UAAU,gBACR,uDACE;AACE,IAAA,QAAQ,EAAEM,UADZ,CAEE;AAFF;AAGE,IAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,KAAlB;AAAwB,IAAA,KAAK,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEI,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,eASE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAE,CAACF,WAFZ;AAGE,IAAA,OAAO,EAAEa,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,eAAD;AACE,IAAA,QAAQ,eACN,oBAAC,WAAD;AACE,MAAA,MAAM,EAAEX,aADV,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAOE,IAAA,QAAQ,YAAKA,aAAa,CAAChE,QAAnB,SAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CATF,CADF,CADQ,gBA+BR,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCN,CAzgBF,CADF,CADF,CArEF,CADF,CADF,gBA8nBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAC,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,CADF,CADF,CAFF,CA/nBH,gBA6oBC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9oBJ,CADF,CANF,CADF,CADF;AA8pBD,CAh3BD;;AAk3BA,eAAeS,aAAf","sourcesContent":["import Box from '@iso/components/utility/box'\nimport LayoutContent from '@iso/components/utility/layoutContent'\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper'\nimport Loader from '@iso/components/utility/loader'\nimport {\n  Button,\n  Col,\n  Form,\n  Input,\n  notification,\n  Row,\n  Skeleton,\n  Spin,\n} from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, Redirect, useParams, useRouteMatch } from 'react-router-dom'\nimport {\n  addResume,\n  clearCurrentResume,\n  clearStatus,\n  editResume,\n  fetchResumeById,\n  fetchResumes,\n} from '../redux/resumes/actions'\nimport { Header, Title } from './AppLayout.style'\nimport InvoicePageWrapper from './Invoice/SingleInvoice.styles'\nimport RenderedPdf from './RenderedPdf/RenderedPdf'\nimport Styles from './AddEditResume.scss'\nimport { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer'\nimport { Prompt } from 'react-router'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons'\n\nconst { TextArea } = Input\nexport const unstructured = ({\n  contact: { firstName, lastName, email, phone },\n  workExperience: { headerName, content },\n  education,\n  projects,\n  skills,\n  fileName,\n}) => ({\n  fileName,\n  firstName,\n  lastName,\n  phone,\n  email,\n  workHeaderName: headerName,\n  workExperienceContent: content,\n  educationContent: education.content,\n  educationHeaderName: education.headerName,\n  projectHeaderName: projects.headerName,\n  projectContent: projects.content,\n  skillsContent: skills.content,\n  skillsHeaderName: skills.headerName,\n})\n\nconst AddEditResume = () => {\n  const [numPages, setNumPages] = useState(null)\n  const [pageNumber, setPageNumber] = useState(1)\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages)\n  }\n  const dispatch = useDispatch()\n  const { resumeId } = useParams()\n\n  const match = useRouteMatch()\n  const isAddResume = match.path.endsWith('create-resume')\n  const { error, success, currentResume } = useSelector(\n    (state) => state.resumeData\n  )\n  const { resumes, count } = useSelector((state) => state.resumeData.resumes)\n\n  const { firstName, lastName, email } = useSelector((state) => state.Auth)\n  const defaultFileNamePrefix = 'New Resume'\n  /**\n   * Generate default filenames like New Resume 1, New Resume 2, etc\n   * @param {list of resumes} resumes\n   */\n  const defaultFileName = (resumes) => {\n    let maxIndex = -1\n    resumes.forEach((resume) => {\n      if (resume.fileName.startsWith(defaultFileNamePrefix)) {\n        const fileIndex =\n          resume.fileName === defaultFileNamePrefix\n            ? 0\n            : parseInt(resume.fileName.substr(defaultFileNamePrefix.length + 1))\n        if (Number.isInteger(fileIndex)) {\n          maxIndex = Math.max(maxIndex, fileIndex)\n        }\n      }\n    })\n    return maxIndex === -1\n      ? defaultFileNamePrefix\n      : `${defaultFileNamePrefix} ${maxIndex + 1}`\n  }\n  const [fileName, setFileName] = useState(defaultFileName(resumes))\n\n  const [isLoading, setLoading] = useState(false)\n  // So it should be false initially, except if I'm on add resume page\n  const [isPageLoading, setPageLoading] = useState(true)\n  const [redirectToReferrer, setRedirectToReferrer] = useState(false)\n  const [isChangeDetected, setChangeDetected] = useState(false)\n  const [isLiveChangeDetected, setLiveChangeDetected] = useState(false)\n  // Hackey workaround for React-PDF bug\n  const [isPdfReady, setPdfReady] = useState(true)\n  const [isUpdating, setUpdating] = useState(false)\n  const [liveResume, setLiveResume] = useState(\n    isAddResume\n      ? {\n          fileName,\n          firstName,\n          lastName,\n          email,\n          workHeaderName: 'Work Experience',\n          workExperienceContent: [],\n        }\n      : {\n          ...unstructured(currentResume),\n        }\n  )\n  const [isSpinning, setSpinning] = useState(false)\n  const [canDownload, setCanDownload] = useState(true)\n\n  const [delayedResume, setDelayedResume] = useState(liveResume)\n\n  const [form] = Form.useForm()\n\n  useEffect(() => {\n    if (!isUpdating && isLiveChangeDetected) {\n      console.log('liveResume', delayedResume, 'latestValue', liveResume)\n      setTimeout(() => {\n        setUpdating(true)\n        setTimeout(() => {\n          setUpdating(false)\n          setLiveChangeDetected(false)\n        }, 2000)\n      }, 9000)\n      setSpinning(true)\n      setTimeout(() => {\n        setSpinning(false)\n      }, 500)\n      setDelayedResume({ ...delayedResume, ...liveResume })\n    }\n  }, [isUpdating, isLiveChangeDetected])\n\n  useEffect(() => {\n    // If initially edit, fetch resume => add currentResume\n    if (!isAddResume) {\n      dispatch(fetchResumeById(resumeId))\n      // If initially add, clear current resume\n    } else {\n      dispatch(clearCurrentResume())\n      setRedirectToReferrer(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (success || error) {\n      dispatch(clearStatus())\n      setLoading(false)\n      setPageLoading(false)\n    }\n  }, [success, error])\n\n  const updateDelayedResume = () => {\n    setSpinning(true)\n    setTimeout(() => {\n      setSpinning(false)\n    }, 500)\n    setDelayedResume({ ...delayedResume, ...liveResume })\n    setLiveChangeDetected(false)\n  }\n\n  const onFinish = (values) => {\n    const structured = ({\n      fileName,\n      firstName,\n      lastName,\n      phone,\n      email,\n      workHeaderName,\n      workExperienceContent,\n      educationContent,\n      educationHeaderName,\n      projectContent,\n      projectHeaderName,\n      skillsContent,\n      skillsHeaderName,\n    }) => ({\n      contact: {\n        firstName,\n        lastName,\n        email,\n        phone,\n      },\n      workExperience: {\n        headerName: workHeaderName,\n        content: workExperienceContent,\n      },\n      education: {\n        headerName: educationHeaderName,\n        content: educationContent,\n      },\n      projects: {\n        headerName: projectHeaderName,\n        content: projectContent,\n      },\n      skills: {\n        headerName: skillsHeaderName,\n        content: skillsContent,\n      },\n      fileName,\n    })\n    if (isAddResume) {\n      dispatch(addResume(structured(values)))\n    } else {\n      setPdfReady(false)\n      setTimeout(() => {\n        setPdfReady(true)\n      }, 1)\n      dispatch(editResume(resumeId, structured(values)))\n      updateDelayedResume()\n    }\n    setLoading(true)\n  }\n\n  const download = () => {\n    setCanDownload(false)\n    updateDelayedResume()\n    setTimeout(() => {\n      setCanDownload(true)\n    }, 200)\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  useEffect(() => {\n    if (error) {\n      notification['error']({\n        message: 'Error',\n        description: error,\n      })\n    }\n  }, [error])\n  useEffect(() => {\n    if (success) {\n      dispatch(fetchResumes)\n      if (isAddResume) setRedirectToReferrer(true)\n      if (!isAddResume) {\n        setChangeDetected(false)\n        setLiveChangeDetected(false)\n      }\n    }\n  }, [success])\n\n  if (redirectToReferrer && currentResume) {\n    let from = {\n      pathname: `/dashboard/edit-resume/${currentResume._id}`,\n    }\n\n    return <Redirect to={from} />\n  }\n\n  return (\n    <>\n      <React.Fragment>\n        <Prompt\n          when={isChangeDetected}\n          message=\"You have unsaved changes. Are you sure you want to leave?\"\n        />\n\n        <LayoutContentWrapper>\n          <LayoutContent>\n            {!isPageLoading ? (\n              isAddResume || currentResume ? (\n                <>\n                  <Form\n                    form={form}\n                    layout=\"vertical\"\n                    initialValues={liveResume}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    onValuesChange={(value) => {\n                      setLiveResume({ ...liveResume, ...value })\n                      setChangeDetected(true)\n                      setLiveChangeDetected(true)\n                    }}\n                    scrollToFirstError\n                  >\n                    <Header>\n                      <Title>\n                        {isAddResume\n                          ? fileName\n                            ? `Build Resume \"${fileName}\"`\n                            : 'Build Resume'\n                          : `Edit Resume \"${currentResume.fileName}\"`}\n                      </Title>\n                      <InvoicePageWrapper className=\"InvoicePageWrapper\">\n                        <div className=\"PageHeader viewMode\">\n                          {!isAddResume ? (\n                            <>\n                              {isChangeDetected ? (\n                                <Link to={`/dashboard/resume/${resumeId}`}>\n                                  <Button className=\"isoGoInvoBtn\">\n                                    Cancel\n                                  </Button>\n                                </Link>\n                              ) : (\n                                <Link to={`/dashboard/resume/${resumeId}`}>\n                                  <Button className=\"isoGoInvoBtn\">Done</Button>\n                                </Link>\n                              )}\n\n                              {isChangeDetected ? (\n                                <Button\n                                  type=\"primary\"\n                                  loading={isLoading}\n                                  htmlType=\"submit\"\n                                >\n                                  Save Changes\n                                </Button>\n                              ) : (\n                                <Button type=\"primary\" disabled>\n                                  Changes Saved!\n                                </Button>\n                              )}\n                            </>\n                          ) : (\n                            <>\n                              <Link to=\"/dashboard\">\n                                <Button className=\"isoGoInvoBtn\">Cancel</Button>\n                              </Link>\n                              <Button\n                                type=\"primary\"\n                                loading={isLoading}\n                                htmlType=\"submit\"\n                              >\n                                Save\n                              </Button>\n                            </>\n                          )}\n                        </div>\n                      </InvoicePageWrapper>\n                    </Header>\n\n                    <Box>\n                      <InvoicePageWrapper className=\"editView\">\n                        <Row gutter={24}>\n                          <Col xl={12} lg={12} md={12} span={24}>\n                            <Row gutter={16}>\n                              <Col xl={12} lg={12} md={12} span={24}>\n                                <Form.Item\n                                  label=\"File Name\"\n                                  name=\"fileName\"\n                                  rules={[\n                                    {\n                                      required: true,\n                                      message: 'Please input a file name!',\n                                    },\n                                  ]}\n                                >\n                                  <Input\n                                    placeholder=\"File Name\"\n                                    onChange={(e) => {\n                                      setFileName(e.target.value)\n                                    }}\n                                  />\n                                </Form.Item>\n                              </Col>\n                            </Row>\n\n                            <br></br>\n                            <h4>Contact Information</h4>\n                            <Row gutter={16}>\n                              <Col xl={12} lg={12} md={12} span={24}>\n                                <Form.Item\n                                  label=\"First Name\"\n                                  name=\"firstName\"\n                                  rules={[\n                                    {\n                                      required: true,\n                                      message: 'Please input your first name!',\n                                    },\n                                  ]}\n                                >\n                                  <Input placeholder=\"First Name\" />\n                                </Form.Item>\n                              </Col>\n                              <Col xl={12} lg={12} md={12} span={24}>\n                                <Form.Item\n                                  label=\"Last Name\"\n                                  name=\"lastName\"\n                                  rules={[\n                                    {\n                                      required: true,\n                                      message: 'Please input your last name!',\n                                    },\n                                  ]}\n                                >\n                                  <Input placeholder=\"Last Name\" />\n                                </Form.Item>\n                              </Col>\n                              <Col xl={12} lg={12} md={12} span={24}>\n                                <Form.Item\n                                  label=\"Email\"\n                                  name=\"email\"\n                                  rules={[{ type: 'email' }]}\n                                >\n                                  <Input placeholder=\"Email\" />\n                                </Form.Item>\n                              </Col>\n                              <Col xl={12} lg={12} md={12} span={24}>\n                                <Form.Item label=\"Contact Number\" name=\"phone\">\n                                  <Input placeholder=\"Contact Number\" />\n                                </Form.Item>\n                              </Col>\n\n                              <Col xl={24} lg={24} md={24} span={24}>\n                                <br></br>\n                                <h4>Work Experience</h4>\n                                <Form.List name=\"workExperienceContent\">\n                                  {(fields, { add, remove }) => {\n                                    return (\n                                      <div>\n                                        {fields.map((field, index) => (\n                                          <Row key={field.key}>\n                                            <Col xl={23}>Job {index + 1}</Col>\n                                            <Col xl={1}>\n                                              <MinusCircleOutlined\n                                                className=\"dynamic-delete-button\"\n                                                onClick={() => {\n                                                  remove(field.name)\n                                                }}\n                                              />\n                                            </Col>\n                                            <Col xl={24} span={24}>\n                                              <Form.Item\n                                                label=\"Job Title\"\n                                                name={[field.name, 'jobTitle']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'jobTitle',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"Job Title\" />\n                                              </Form.Item>\n                                            </Col>\n\n                                            <Col xl={24} span={24}>\n                                              <Form.Item\n                                                label=\"Company Name\"\n                                                name={[\n                                                  field.name,\n                                                  'companyName',\n                                                ]}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'companyName',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"Employer Name\" />\n                                              </Form.Item>\n                                            </Col>\n                                            <Col\n                                              xl={12}\n                                              lg={12}\n                                              md={12}\n                                              span={24}\n                                            >\n                                              <Form.Item\n                                                label=\"Start Date\"\n                                                name={[field.name, 'startDate']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'startDate',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"Start Date\" />\n                                              </Form.Item>\n                                            </Col>\n\n                                            <Col\n                                              xl={12}\n                                              lg={12}\n                                              md={12}\n                                              span={24}\n                                            >\n                                              <Form.Item\n                                                label=\"End Date\"\n                                                name={[field.name, 'endDate']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'endDate',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"End Date\" />\n                                              </Form.Item>\n                                            </Col>\n\n                                            <Col xl={24} span={24}>\n                                              <Form.Item\n                                                label=\"Description\"\n                                                name={[\n                                                  field.name,\n                                                  'description',\n                                                ]}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'description',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <TextArea\n                                                  rows={4}\n                                                  placeholder=\"Description\"\n                                                />\n                                              </Form.Item>\n                                            </Col>\n                                          </Row>\n                                        ))}\n\n                                        <Form.Item>\n                                          <Button\n                                            type=\"dashed\"\n                                            onClick={() => {\n                                              add()\n                                            }}\n                                            style={{ width: '100%' }}\n                                          >\n                                            <PlusOutlined /> Add Work Experience\n                                          </Button>\n                                        </Form.Item>\n                                      </div>\n                                    )\n                                  }}\n                                </Form.List>\n                              </Col>\n\n                              <Col xl={24} lg={24} md={24} span={24}>\n                                <br></br>\n                                <h4>Education</h4>\n                                <Form.List name=\"educationContent\">\n                                  {(fields, { add, remove }) => {\n                                    return (\n                                      <div>\n                                        {fields.map((field, index) => (\n                                          <Row key={field.key}>\n                                            <Col xl={23}>\n                                              Education {index + 1}\n                                            </Col>\n                                            <Col xl={1}>\n                                              <MinusCircleOutlined\n                                                className=\"dynamic-delete-button\"\n                                                onClick={() => {\n                                                  remove(field.name)\n                                                }}\n                                              />\n                                            </Col>\n                                            <Col xl={24} span={24}>\n                                              <Form.Item\n                                                label=\"School Name\"\n                                                name={[\n                                                  field.name,\n                                                  'collegeName',\n                                                ]}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'collegeName',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"School Name\" />\n                                              </Form.Item>\n                                            </Col>\n\n                                            <Col xl={12} span={24}>\n                                              <Form.Item\n                                                label=\"GPA\"\n                                                name={[field.name, 'gpa']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'gpa',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"GPA\" />\n                                              </Form.Item>\n                                            </Col>\n                                            <Col xl={12} span={24}>\n                                              <Form.Item\n                                                label=\"Degree\"\n                                                name={[field.name, 'degree']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'degree',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"Degree\" />\n                                              </Form.Item>\n                                            </Col>\n                                            <Col\n                                              xl={12}\n                                              lg={12}\n                                              md={12}\n                                              span={24}\n                                            >\n                                              <Form.Item\n                                                label=\"Start Date\"\n                                                name={[field.name, 'startDate']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'startDate',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"Start Date\" />\n                                              </Form.Item>\n                                            </Col>\n\n                                            <Col\n                                              xl={12}\n                                              lg={12}\n                                              md={12}\n                                              span={24}\n                                            >\n                                              <Form.Item\n                                                label=\"End Date\"\n                                                name={[field.name, 'endDate']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'endDate',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"End Date\" />\n                                              </Form.Item>\n                                            </Col>\n\n                                            <Col xl={24} span={24}>\n                                              <Form.Item\n                                                label=\"Summary\"\n                                                name={[field.name, 'summary']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'summary',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <TextArea\n                                                  rows={4}\n                                                  placeholder=\"Summary\"\n                                                />\n                                              </Form.Item>\n                                            </Col>\n                                          </Row>\n                                        ))}\n\n                                        <Form.Item>\n                                          <Button\n                                            type=\"dashed\"\n                                            onClick={() => {\n                                              add()\n                                            }}\n                                            style={{ width: '100%' }}\n                                          >\n                                            <PlusOutlined /> Add Education\n                                          </Button>\n                                        </Form.Item>\n                                      </div>\n                                    )\n                                  }}\n                                </Form.List>\n                              </Col>\n\n                              <Col xl={24} lg={24} md={24} span={24}>\n                                <br></br>\n                                <h4>Projects</h4>\n                                <Form.List name=\"projectContent\">\n                                  {(fields, { add, remove }) => {\n                                    return (\n                                      <div>\n                                        {fields.map((field, index) => (\n                                          <Row key={field.key}>\n                                            <Col xl={23}>\n                                              Project {index + 1}\n                                            </Col>\n                                            <Col xl={1}>\n                                              <MinusCircleOutlined\n                                                className=\"dynamic-delete-button\"\n                                                onClick={() => {\n                                                  remove(field.name)\n                                                }}\n                                              />\n                                            </Col>\n                                            <Col xl={24} span={24}>\n                                              <Form.Item\n                                                label=\"Project Title\"\n                                                name={[field.name, 'title']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'title',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"Project Title\" />\n                                              </Form.Item>\n                                            </Col>\n\n                                            <Col xl={24} span={24}>\n                                              <Form.Item\n                                                label=\"Link\"\n                                                name={[field.name, 'link']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'link',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"Link\" />\n                                              </Form.Item>\n                                            </Col>\n\n                                            <Col\n                                              xl={12}\n                                              lg={12}\n                                              md={12}\n                                              span={24}\n                                            >\n                                              <Form.Item\n                                                label=\"Start Date\"\n                                                name={[field.name, 'startDate']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'startDate',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"Start Date\" />\n                                              </Form.Item>\n                                            </Col>\n\n                                            <Col\n                                              xl={12}\n                                              lg={12}\n                                              md={12}\n                                              span={24}\n                                            >\n                                              <Form.Item\n                                                label=\"End Date\"\n                                                name={[field.name, 'endDate']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'endDate',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"End Date\" />\n                                              </Form.Item>\n                                            </Col>\n\n                                            <Col xl={24} span={24}>\n                                              <Form.Item\n                                                label=\"Summary\"\n                                                name={[field.name, 'summary']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'summary',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <TextArea\n                                                  rows={4}\n                                                  placeholder=\"Summary\"\n                                                />\n                                              </Form.Item>\n                                            </Col>\n                                          </Row>\n                                        ))}\n\n                                        <Form.Item>\n                                          <Button\n                                            type=\"dashed\"\n                                            onClick={() => {\n                                              add()\n                                            }}\n                                            style={{ width: '100%' }}\n                                          >\n                                            <PlusOutlined /> Add Project\n                                          </Button>\n                                        </Form.Item>\n                                      </div>\n                                    )\n                                  }}\n                                </Form.List>\n                              </Col>\n\n                              <Col xl={24} lg={24} md={24} span={24}>\n                                <br></br>\n                                <h4>Skills</h4>\n                                <Form.List name=\"skillsContent\">\n                                  {(fields, { add, remove }) => {\n                                    return (\n                                      <div>\n                                        {fields.map((field, index) => (\n                                          <Row key={field.key}>\n                                            <Col xl={23}>Skill {index + 1}</Col>\n                                            <Col xl={1}>\n                                              <MinusCircleOutlined\n                                                className=\"dynamic-delete-button\"\n                                                onClick={() => {\n                                                  remove(field.name)\n                                                }}\n                                              />\n                                            </Col>\n                                            <Col xl={24} span={24}>\n                                              <Form.Item\n                                                label=\"Skill Title\"\n                                                name={[field.name, 'subHeader']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'title',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"Skill Title\" />\n                                              </Form.Item>\n                                            </Col>\n\n                                            <Col xl={24} span={24}>\n                                              <Form.Item\n                                                label=\"Details\"\n                                                name={[field.name, 'details']}\n                                                fieldKey={[\n                                                  field.fieldKey,\n                                                  'details',\n                                                ]}\n                                                // rules={rules}\n                                              >\n                                                <Input placeholder=\"Details\" />\n                                              </Form.Item>\n                                            </Col>\n                                          </Row>\n                                        ))}\n\n                                        <Form.Item>\n                                          <Button\n                                            type=\"dashed\"\n                                            onClick={() => {\n                                              add()\n                                            }}\n                                            style={{ width: '100%' }}\n                                          >\n                                            <PlusOutlined /> Add Skill\n                                          </Button>\n                                        </Form.Item>\n                                      </div>\n                                    )\n                                  }}\n                                </Form.List>\n                              </Col>\n                            </Row>\n                          </Col>\n\n                          <Col flex=\"auto\" className=\"iframeFull\">\n                            {\n                              // isReady\n                              isPdfReady ? (\n                                <>\n                                  <Spin\n                                    spinning={isSpinning}\n                                    // delay={700}\n                                    tip=\"Updating Preview...\"\n                                  >\n                                    <PDFViewer height=\"700\" width=\"95%\">\n                                      <RenderedPdf resume={delayedResume} />\n                                    </PDFViewer>\n\n                                    <Button\n                                      type=\"primary\"\n                                      loading={!canDownload}\n                                      onClick={download}\n                                    >\n                                      <PDFDownloadLink\n                                        document={\n                                          <RenderedPdf\n                                            resume={delayedResume}\n                                            // resume={{ fileName: 'dummy' }}\n                                          />\n                                        }\n                                        fileName={`${delayedResume.fileName}.pdf`}\n                                      >\n                                        Download!\n                                      </PDFDownloadLink>\n                                    </Button>\n                                  </Spin>\n                                </>\n                              ) : (\n                                <Loader />\n                              )\n                            }\n                          </Col>\n                        </Row>\n                      </InvoicePageWrapper>\n                    </Box>\n                  </Form>\n                </>\n              ) : (\n                <Header>\n                  <Title>Resume not found!</Title>\n                  <InvoicePageWrapper className=\"InvoicePageWrapper\">\n                    <div className=\"PageHeader viewMode\">\n                      <Link to=\"/dashboard\">\n                        <Button className=\"isoGoInvoBtn\">\n                          <span>Back to My Resumes</span>\n                        </Button>\n                      </Link>\n                    </div>\n                  </InvoicePageWrapper>\n                </Header>\n              )\n            ) : (\n              <Loader />\n            )}\n          </LayoutContent>\n        </LayoutContentWrapper>\n      </React.Fragment>\n    </>\n  )\n}\n\nexport default AddEditResume\n"]},"metadata":{},"sourceType":"module"}