{"ast":null,"code":"import \"antd/es/popconfirm/style/css\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/Tables/AntTables/configs.js\";\nimport React, { useEffect } from 'react';\nimport clone from 'clone';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport CardWrapper from '../../Invoice/Invoice.styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteResume, fetchResumes, clearStatus } from '../../../redux/resumes/actions';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { DateCell, ImageCell, LinkCell, TextCell } from '@iso/components/Tables/HelperCells';\nimport { connect } from 'react-redux';\n\nconst renderCell = (object, type, key) => {\n  const value = object[key];\n\n  switch (type) {\n    case 'ImageCell':\n      return ImageCell(value);\n\n    case 'DateCell':\n      return DateCell(value);\n\n    case 'LinkCell':\n      return LinkCell(value);\n\n    default:\n      return TextCell(value);\n  }\n};\n\nconst ActionButtons = ({\n  url,\n  resumeId,\n  fileName\n}) => {\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoInvoiceBtnView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\".concat(url, \"/resume/\").concat(resumeId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    color: \"primary\",\n    className: \"invoiceViewBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"View\")), /*#__PURE__*/React.createElement(_Popconfirm, {\n    placement: \"leftBottom\",\n    title: \"Sure you want to delete \\\"\".concat(fileName, \"\\\"?\"),\n    onConfirm: () => {\n      dispatch(deleteResume(resumeId));\n    },\n    icon: /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }),\n    okText: \"Yes, Delete\",\n    okButtonProps: {\n      type: 'primary',\n      danger: true\n    },\n    cancelText: \"Cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    className: \"invoiceDltBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ion-android-delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst columns = ({\n  url\n}) => [{\n  title: 'File Name',\n  key: 'fileName',\n  width: 500,\n  render: object => renderCell(object, 'TextCell', 'fileName')\n}, {\n  title: 'Date Created',\n  key: 'createdAt',\n  width: 100,\n  render: object => renderCell(object, 'DateCell', 'createdAt')\n}, {\n  width: 100,\n  render: object => {\n    return /*#__PURE__*/React.createElement(ActionButtons, {\n      resumeId: object._id,\n      fileName: object.fileName,\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    });\n  }\n}];\n\nconst tableinfo = {\n  title: 'Simple Table',\n  value: 'simple',\n  columns\n};\nexport { columns, tableinfo };","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/Tables/AntTables/configs.js"],"names":["React","useEffect","clone","Link","useRouteMatch","CardWrapper","useSelector","useDispatch","deleteResume","fetchResumes","clearStatus","QuestionCircleOutlined","DateCell","ImageCell","LinkCell","TextCell","connect","renderCell","object","type","key","value","ActionButtons","url","resumeId","fileName","dispatch","color","danger","columns","title","width","render","_id","tableinfo"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport clone from 'clone'\nimport { Button, notification, Popconfirm } from 'antd'\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport CardWrapper from '../../Invoice/Invoice.styles'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  deleteResume,\n  fetchResumes,\n  clearStatus,\n} from '../../../redux/resumes/actions'\nimport { QuestionCircleOutlined } from '@ant-design/icons'\n\nimport {\n  DateCell,\n  ImageCell,\n  LinkCell,\n  TextCell,\n} from '@iso/components/Tables/HelperCells'\nimport { connect } from 'react-redux'\n\nconst renderCell = (object, type, key) => {\n  const value = object[key]\n  switch (type) {\n    case 'ImageCell':\n      return ImageCell(value)\n    case 'DateCell':\n      return DateCell(value)\n    case 'LinkCell':\n      return LinkCell(value)\n    default:\n      return TextCell(value)\n  }\n}\n\nconst ActionButtons = ({ url, resumeId, fileName }) => {\n  const dispatch = useDispatch()\n\n  return (\n    <CardWrapper>\n      <div className=\"isoInvoiceBtnView\">\n        <Link to={`${url}/resume/${resumeId}`}>\n          <Button color=\"primary\" className=\"invoiceViewBtn\">\n            View\n          </Button>\n        </Link>\n        <Popconfirm\n          placement=\"leftBottom\"\n          title={`Sure you want to delete \"${fileName}\"?`}\n          onConfirm={() => {\n            dispatch(deleteResume(resumeId))\n          }}\n          icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\n          okText=\"Yes, Delete\"\n          okButtonProps={{ type: 'primary', danger: true }}\n          cancelText=\"Cancel\"\n        >\n          <Button className=\"invoiceDltBtn\">\n            <i className=\"ion-android-delete\" />\n          </Button>\n        </Popconfirm>\n      </div>\n    </CardWrapper>\n  )\n}\n\nconst columns = ({ url }) => [\n  {\n    title: 'File Name',\n    key: 'fileName',\n    width: 500,\n    render: (object) => renderCell(object, 'TextCell', 'fileName'),\n  },\n  {\n    title: 'Date Created',\n    key: 'createdAt',\n    width: 100,\n    render: (object) => renderCell(object, 'DateCell', 'createdAt'),\n  },\n  {\n    width: 100,\n    render: (object) => {\n      return (\n        <ActionButtons\n          resumeId={object._id}\n          fileName={object.fileName}\n          url={url}\n        />\n      )\n    },\n  },\n]\n\nconst tableinfo = {\n  title: 'Simple Table',\n  value: 'simple',\n  columns,\n}\n\nexport { columns, tableinfo }\n"]},"metadata":{},"sourceType":"module"}