{"ast":null,"code":"import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n\n      this.f = null;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\n\nexport default _xdropWhile;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/ramda/es/internal/_xdropWhile.js"],"names":["_curry2","_xfBase","XDropWhile","f","xf","prototype","init","result","input","_xdropWhile"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,IAAIC,UAAU,GAAG,aAAa,YAAY;AACxC,WAASA,UAAT,CAAoBC,CAApB,EAAuBC,EAAvB,EAA2B;AACzB,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKD,CAAL,GAASA,CAAT;AACD;;AACDD,EAAAA,UAAU,CAACG,SAAX,CAAqB,mBAArB,IAA4CJ,OAAO,CAACK,IAApD;AACAJ,EAAAA,UAAU,CAACG,SAAX,CAAqB,qBAArB,IAA8CJ,OAAO,CAACM,MAAtD;;AACAL,EAAAA,UAAU,CAACG,SAAX,CAAqB,mBAArB,IAA4C,UAAUE,MAAV,EAAkBC,KAAlB,EAAyB;AACnE,QAAI,KAAKL,CAAT,EAAY;AACV,UAAI,KAAKA,CAAL,CAAOK,KAAP,CAAJ,EAAmB;AACjB,eAAOD,MAAP;AACD;;AACD,WAAKJ,CAAL,GAAS,IAAT;AACD;;AACD,WAAO,KAAKC,EAAL,CAAQ,mBAAR,EAA6BG,MAA7B,EAAqCC,KAArC,CAAP;AACD,GARD;;AAUA,SAAON,UAAP;AACD,CAlB6B,EAA9B;;AAoBA,IAAIO,WAAW,GAAG,aAAaT,OAAO,CAAC,SAASS,WAAT,CAAqBN,CAArB,EAAwBC,EAAxB,EAA4B;AACjE,SAAO,IAAIF,UAAJ,CAAeC,CAAf,EAAkBC,EAAlB,CAAP;AACD,CAFqC,CAAtC;;AAGA,eAAeK,WAAf","sourcesContent":["import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;"]},"metadata":{},"sourceType":"module"}