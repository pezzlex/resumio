{"ast":null,"code":"import { getNamedFormat, filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { MessageFormatError } from '../error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\n\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n  var locale = _a.locale,\n      formats = _a.formats,\n      onError = _a.onError;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var format = options.format;\n  var defaults = !!format && getNamedFormat(formats, 'relative', format, onError) || {};\n  var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n  return getRelativeTimeFormat(locale, filteredOptions);\n}\n\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!unit) {\n    unit = 'second';\n  }\n\n  var RelativeTimeFormat = Intl.RelativeTimeFormat;\n\n  if (!RelativeTimeFormat) {\n    config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", \"MISSING_INTL_API\"\n    /* MISSING_INTL_API */\n    ));\n  }\n\n  try {\n    return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n  } catch (e) {\n    config.onError(new MessageFormatError('Error formatting relative time.', e));\n  }\n\n  return String(value);\n}","map":{"version":3,"sources":["../../src/formatters/relativeTime.ts"],"names":[],"mappings":"AAEA,SAAQ,cAAR,EAAwB,WAAxB,QAA0C,UAA1C;AAIA,SAAQ,WAAR,QAAqC,oBAArC;AACA,SAAQ,kBAAR,QAAiC,UAAjC;AAEA,IAAM,4BAA4B,GAE9B,CAAC,SAAD,EAAY,OAAZ,CAFJ;;AAIA,SAAS,YAAT,CACE,EADF,EAME,qBANF,EAOE,OAPF,EAOmE;MAL/D,MAAA,GAAA,EAAA,CAAA,M;MACA,OAAA,GAAA,EAAA,CAAA,O;MACA,OAAA,GAAA,EAAA,CAAA,O;;AAGF,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAiE;;AAE1D,MAAA,MAAA,GAAA,OAAA,CAAA,MAAA;AAEP,MAAM,QAAQ,GACX,CAAC,CAAC,MAAF,IAAY,cAAc,CAAC,OAAD,EAAU,UAAV,EAAsB,MAAtB,EAA8B,OAA9B,CAA3B,IAAsE,EADxE;AAEA,MAAM,eAAe,GAAG,WAAW,CACjC,OADiC,EAEjC,4BAFiC,EAGjC,QAHiC,CAAnC;AAMA,SAAO,qBAAqB,CAAC,MAAD,EAAS,eAAT,CAA5B;AACD;;AAED,OAAM,SAAU,kBAAV,CACJ,MADI,EAEJ,qBAFI,EAGJ,KAHI,EAIJ,IAJI,EAKJ,OALI,EAK6D;AAAjE,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAiE;;AAEjE,MAAI,CAAC,IAAL,EAAW;AACT,IAAA,IAAI,GAAG,QAAP;AACD;;AACD,MAAM,kBAAkB,GAAI,IAAY,CAAC,kBAAzC;;AACA,MAAI,CAAC,kBAAL,EAAyB;AACvB,IAAA,MAAM,CAAC,OAAP,CACE,IAAI,WAAJ,CACE,iIADF,EAGL;AAAA;AAHK,KADF;AAQD;;AACD,MAAI;AACF,WAAO,YAAY,CAAC,MAAD,EAAS,qBAAT,EAAgC,OAAhC,CAAZ,CAAqD,MAArD,CACL,KADK,EAEL,IAFK,CAAP;AAID,GALD,CAKE,OAAO,CAAP,EAAU;AACV,IAAA,MAAM,CAAC,OAAP,CACE,IAAI,kBAAJ,CAAuB,iCAAvB,EAA0D,CAA1D,CADF;AAGD;;AAED,SAAO,MAAM,CAAC,KAAD,CAAb;AACD","sourceRoot":"","sourcesContent":["import { getNamedFormat, filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { MessageFormatError } from '../error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new MessageFormatError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\n//# sourceMappingURL=relativeTime.js.map"]},"metadata":{},"sourceType":"module"}