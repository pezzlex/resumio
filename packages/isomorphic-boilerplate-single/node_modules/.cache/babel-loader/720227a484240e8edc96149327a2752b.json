{"ast":null,"code":"export var TYPE;\n\n(function (TYPE) {\n  /**\n   * Raw text\n   */\n  TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n  /**\n   * Variable w/o any format, e.g `var` in `this is a {var}`\n   */\n\n  TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n  /**\n   * Variable w/ number format\n   */\n\n  TYPE[TYPE[\"number\"] = 2] = \"number\";\n  /**\n   * Variable w/ date format\n   */\n\n  TYPE[TYPE[\"date\"] = 3] = \"date\";\n  /**\n   * Variable w/ time format\n   */\n\n  TYPE[TYPE[\"time\"] = 4] = \"time\";\n  /**\n   * Variable w/ select format\n   */\n\n  TYPE[TYPE[\"select\"] = 5] = \"select\";\n  /**\n   * Variable w/ plural format\n   */\n\n  TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n  /**\n   * Only possible within plural argument.\n   * This is the `#` symbol that will be substituted with the count.\n   */\n\n  TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n  /**\n   * XML-like tag\n   */\n\n  TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\n\nexport var SKELETON_TYPE;\n\n(function (SKELETON_TYPE) {\n  SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n  SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\n\n\nexport function isLiteralElement(el) {\n  return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n  return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n  return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n  return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n  return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n  return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n  return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n  return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n  return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n  return !!(el && typeof el === 'object' && el.type === 0\n  /* number */\n  );\n}\nexport function isDateTimeSkeleton(el) {\n  return !!(el && typeof el === 'object' && el.type === 1\n  /* dateTime */\n  );\n}\nexport function createLiteralElement(value) {\n  return {\n    type: TYPE.literal,\n    value: value\n  };\n}\nexport function createNumberElement(value, style) {\n  return {\n    type: TYPE.number,\n    value: value,\n    style: style\n  };\n}","map":{"version":3,"sources":["../src/types.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nexport var SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n//# sourceMappingURL=types.js.map"]},"metadata":{},"sourceType":"module"}