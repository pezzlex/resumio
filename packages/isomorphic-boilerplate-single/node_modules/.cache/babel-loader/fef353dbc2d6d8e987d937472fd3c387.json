{"ast":null,"code":"function _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport * as React from 'react';\nimport { useState, useCallback, useMemo } from 'react';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport devWarning from '../../_util/devWarning'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map()); // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(selectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1];\n\n  var _useMemo = useMemo(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : convertDataToEntities(data, undefined, getRowKey);\n  }, [data, getRowKey, checkStrictly]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = useMemo(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys, []];\n    }\n\n    var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys, halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = _slicedToArray(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys) {\n    var availableKeys;\n    var records;\n\n    if (preserveSelectedRowKeys) {\n      // Keep key if mark as preserveSelectedRowKeys\n      var newCache = new Map();\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n        return record;\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n\n    if (onSelectionChange) {\n      onSelectionChange(availableKeys, records);\n    }\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = useCallback(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(Menu, {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key); // Record checked\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            indeterminate: indeterminate,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                setSelectedKeys(keys);\n\n                if (onSelectMultiple) {\n                  onSelectMultiple(!checked, keys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }), changedKeys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }));\n                }\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = _defineProperty({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/antd/es/table/hooks/useSelection.js"],"names":["_toArray","arr","_arrayWithHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableRest","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_slicedToArray","_iterableToArrayLimit","TypeError","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","err","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","iter","len","arr2","React","useState","useCallback","useMemo","DownOutlined","convertDataToEntities","conductCheck","arrAdd","arrDel","INTERNAL_COL_DEFINE","useMergedState","Checkbox","Dropdown","Menu","Radio","devWarning","SELECTION_ALL","SELECTION_INVERT","getFixedType","column","fixed","flattenData","data","childrenColumnName","list","forEach","record","concat","useSelection","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","expandIconColumnIndex","getPopupContainer","preserveRecordsRef","useRef","Map","_useMergedState","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","_useMemo","keyEntities","flattedData","checkboxPropsMap","map","index","checkboxProps","set","process","env","NODE_ENV","isCheckboxDisabled","r","_a","get","disabled","_useMemo2","_conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","keys","Set","derivedHalfSelectedKeySet","_useState","_useState2","lastSelectedKey","setLastSelectedKey","useEffect","setSelectedKeys","availableKeys","records","newCache","current","has","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","selectInvert","keySet","add","transformColumns","columns","recordKeys","filter","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabled","checked","indeterminate","_","node","e","stopPropagation","nativeEvent","_ref2","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","selectionColumn","width","columnTitle","render","_columns","expandColumn","restColumns","selectionFixed"],"mappings":"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","sourcesContent":["function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from 'react';\nimport { useState, useCallback, useMemo } from 'react';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport devWarning from '../../_util/devWarning'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map()); // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(selectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1];\n\n  var _useMemo = useMemo(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : convertDataToEntities(data, undefined, getRowKey);\n  }, [data, getRowKey, checkStrictly]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = useMemo(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys, []];\n    }\n\n    var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys, halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = _slicedToArray(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys) {\n    var availableKeys;\n    var records;\n\n    if (preserveSelectedRowKeys) {\n      // Keep key if mark as preserveSelectedRowKeys\n      var newCache = new Map();\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n        return record;\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n\n    if (onSelectionChange) {\n      onSelectionChange(availableKeys, records);\n    }\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = useCallback(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(Menu, {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key); // Record checked\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            indeterminate: indeterminate,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                setSelectedKeys(keys);\n\n                if (onSelectMultiple) {\n                  onSelectMultiple(!checked, keys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }), changedKeys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }));\n                }\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = _defineProperty({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"]},"metadata":{},"sourceType":"module"}