{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\n\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pickAll;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/node_modules/ramda/es/pickAll.js"],"names":["_curry2","pickAll","names","obj","result","idx","len","length","name"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AAEA;;;;;;;;;;;;;;;;;;;AAkBA,IAAIC,OAAO,GAAG,aAAaD,OAAO,CAAC,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,GAAxB,EAA6B;AAC9D,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAGJ,KAAK,CAACK,MAAhB;;AACA,SAAOF,GAAG,GAAGC,GAAb,EAAkB;AAChB,QAAIE,IAAI,GAAGN,KAAK,CAACG,GAAD,CAAhB;AACAD,IAAAA,MAAM,CAACI,IAAD,CAAN,GAAeL,GAAG,CAACK,IAAD,CAAlB;AACAH,IAAAA,GAAG,IAAI,CAAP;AACD;;AACD,SAAOD,MAAP;AACD,CAViC,CAAlC;;AAWA,eAAeH,OAAf","sourcesContent":["import _curry2 from './internal/_curry2.js';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;"]},"metadata":{},"sourceType":"module"}