{"ast":null,"code":"import \"antd/es/pagination/style/css\";\nimport _Pagination from \"antd/es/pagination\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/notification/style/css\";\nimport _notification from \"antd/es/notification\";\nimport _slicedToArray from \"/Users/pezannekhambatta/Desktop/resumio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/MyResumes.js\";\nimport LayoutContent from '@iso/components/utility/layoutContent';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { clearCurrentResume, clearStatus, fetchResumes } from '../redux/resumes/actions';\nimport { Header, Title } from './AppLayout.style';\nimport Table from './Tables/AntTables/AntTables';\n\nconst MyResumes = () => {\n  const _useRouteMatch = useRouteMatch(),\n        url = _useRouteMatch.url;\n\n  const dispatch = useDispatch();\n  const shouldFetchResumes = useSelector(state => state.resumeData.shouldFetchResumes);\n\n  const _useSelector = useSelector(state => state.resumeData.resumes),\n        resumes = _useSelector.resumes,\n        count = _useSelector.count;\n\n  const isSignedIn = useSelector(state => state.Auth.token);\n  const success = useSelector(state => state.resumeData.success);\n  const error = useSelector(state => state.resumeData.error);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isTableLoading = _useState2[0],\n        setTableLoading = _useState2[1];\n\n  console.log(resumes, count);\n  useEffect(() => {\n    if (success || error) {\n      setTableLoading(false);\n      dispatch(clearStatus());\n      dispatch(clearCurrentResume());\n    }\n  }, [success, error]);\n  useEffect(() => {\n    if (isSignedIn) {\n      dispatch(fetchResumes());\n    }\n  }, [isSignedIn]);\n  useEffect(() => {\n    if (error) {\n      _notification['error']({\n        message: 'Error',\n        description: error\n      });\n    }\n  }, [error]); // useEffect(() => {\n  //   if (success) {\n  //     notification['success']({\n  //       message: 'Success',\n  //       description: success,\n  //     })\n  //   }\n  // }, [success])\n\n  return /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LayoutContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"My Resumes\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"\".concat(url, \"/create-resume\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Build Resume\"))), /*#__PURE__*/React.createElement(Table, {\n    resumes: resumes,\n    url: url,\n    isTableLoading: isTableLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), count > 10 && /*#__PURE__*/React.createElement(_Pagination, {\n    defaultCurrent: 1,\n    total: count,\n    onChange: val => {\n      setTableLoading(true);\n      dispatch(fetchResumes({\n        skip: val - 1\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default MyResumes;","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/MyResumes.js"],"names":["LayoutContent","LayoutContentWrapper","React","useEffect","useState","useDispatch","useSelector","Link","useRouteMatch","clearCurrentResume","clearStatus","fetchResumes","Header","Title","Table","MyResumes","url","dispatch","shouldFetchResumes","state","resumeData","resumes","count","isSignedIn","Auth","token","success","error","isTableLoading","setTableLoading","console","log","message","description","val","skip"],"mappings":"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","sourcesContent":["import LayoutContent from '@iso/components/utility/layoutContent'\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper'\nimport { Button, notification, Pagination } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport {\n  clearCurrentResume,\n  clearStatus,\n  fetchResumes,\n} from '../redux/resumes/actions'\nimport { Header, Title } from './AppLayout.style'\nimport Table from './Tables/AntTables/AntTables'\n\nconst MyResumes = () => {\n  const { url } = useRouteMatch()\n  const dispatch = useDispatch()\n  const shouldFetchResumes = useSelector(\n    (state) => state.resumeData.shouldFetchResumes\n  )\n  const { resumes, count } = useSelector((state) => state.resumeData.resumes)\n  const isSignedIn = useSelector((state) => state.Auth.token)\n  const success = useSelector((state) => state.resumeData.success)\n  const error = useSelector((state) => state.resumeData.error)\n  const [isTableLoading, setTableLoading] = useState(false)\n\n  console.log(resumes, count)\n\n  useEffect(() => {\n    if (success || error) {\n      setTableLoading(false)\n      dispatch(clearStatus())\n      dispatch(clearCurrentResume())\n    }\n  }, [success, error])\n\n  useEffect(() => {\n    if (isSignedIn) {\n      dispatch(fetchResumes())\n    }\n  }, [isSignedIn])\n\n  useEffect(() => {\n    if (error) {\n      notification['error']({\n        message: 'Error',\n        description: error,\n      })\n    }\n  }, [error])\n  // useEffect(() => {\n  //   if (success) {\n  //     notification['success']({\n  //       message: 'Success',\n  //       description: success,\n  //     })\n  //   }\n  // }, [success])\n\n  return (\n    <LayoutContentWrapper>\n      <LayoutContent>\n        <Header>\n          <Title>My Resumes</Title>\n          <Link to={`${url}/create-resume`}>\n            <Button type=\"primary\">Build Resume</Button>\n          </Link>\n        </Header>\n        <Table resumes={resumes} url={url} isTableLoading={isTableLoading} />\n        <br />\n        <br />\n        {count > 10 && (\n          <Pagination\n            defaultCurrent={1}\n            total={count}\n            onChange={(val) => {\n              setTableLoading(true)\n              dispatch(fetchResumes({ skip: val - 1 }))\n            }}\n          />\n        )}\n      </LayoutContent>\n    </LayoutContentWrapper>\n  )\n}\n\nexport default MyResumes\n"]},"metadata":{},"sourceType":"module"}