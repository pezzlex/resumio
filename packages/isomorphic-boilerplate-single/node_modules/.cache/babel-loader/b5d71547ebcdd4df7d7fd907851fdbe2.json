{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/Sidebar/Sidebar.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clone from 'clone';\nimport options from './options';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport Menu from '@iso/components/uielements/menu';\nimport appActions from '@iso/redux/app/actions';\nimport Logo from '@iso/components/utility/logo';\nimport SidebarWrapper from './Sidebar.styles';\nimport SidebarMenu from './SidebarMenu';\nconst Sider = _Layout.Sider;\nconst toggleOpenDrawer = appActions.toggleOpenDrawer,\n      changeOpenKeys = appActions.changeOpenKeys,\n      changeCurrent = appActions.changeCurrent,\n      toggleCollapsed = appActions.toggleCollapsed;\nexport default function Sidebar() {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(state => state.App),\n        view = _useSelector.view,\n        openKeys = _useSelector.openKeys,\n        collapsed = _useSelector.collapsed,\n        openDrawer = _useSelector.openDrawer,\n        current = _useSelector.current,\n        height = _useSelector.height; // const customizedTheme = useSelector(\n  //   (state) => state.ThemeSwitcher.sidebarTheme\n  // )\n\n\n  function handleClick(e) {\n    dispatch(changeCurrent([e.key]));\n\n    if (view === 'MobileView') {\n      setTimeout(() => {\n        dispatch(toggleCollapsed()); // dispatch(toggleOpenDrawer());\n      }, 100);\n    }\n  }\n\n  function onOpenChange(newOpenKeys) {\n    const latestOpenKey = newOpenKeys.find(key => !(openKeys.indexOf(key) > -1));\n    const latestCloseKey = openKeys.find(key => !(newOpenKeys.indexOf(key) > -1));\n    let nextOpenKeys = [];\n\n    if (latestOpenKey) {\n      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n    }\n\n    if (latestCloseKey) {\n      nextOpenKeys = getAncestorKeys(latestCloseKey);\n    }\n\n    dispatch(changeOpenKeys(nextOpenKeys));\n  }\n\n  const getAncestorKeys = key => {\n    const map = {\n      sub3: ['sub2']\n    };\n    return map[key] || [];\n  };\n\n  const isCollapsed = clone(collapsed) && !clone(openDrawer);\n  const mode = isCollapsed === true ? 'vertical' : 'inline';\n\n  const onMouseEnter = event => {\n    if (collapsed && openDrawer === false) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  const onMouseLeave = () => {\n    if (collapsed && openDrawer === true) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  const styling = {\n    backgroundColor: '#323332'\n  };\n  const submenuStyle = {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    color: '#788195'\n  };\n  const submenuColor = {\n    color: '#788195'\n  };\n  return /*#__PURE__*/React.createElement(SidebarWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Sider, {\n    trigger: null,\n    collapsible: true,\n    collapsed: isCollapsed,\n    width: 240,\n    className: \"isomorphicSidebar\",\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    style: styling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    collapsed: isCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Scrollbars, {\n    style: {\n      height: height - 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    onClick: handleClick,\n    theme: \"dark\",\n    className: \"isoDashboardMenu\",\n    mode: mode,\n    openKeys: isCollapsed ? [] : openKeys,\n    selectedKeys: current,\n    onOpenChange: onOpenChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, options.map(d => /*#__PURE__*/React.createElement(SidebarMenu, {\n    key: d.key,\n    submenuStyle: submenuStyle,\n    submenuColor: submenuColor,\n    singleOption: d,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/pezannekhambatta/Desktop/resumio/packages/isomorphic-boilerplate-single/src/containers/Sidebar/Sidebar.js"],"names":["React","useDispatch","useSelector","clone","options","Scrollbars","Menu","appActions","Logo","SidebarWrapper","SidebarMenu","Sider","toggleOpenDrawer","changeOpenKeys","changeCurrent","toggleCollapsed","Sidebar","dispatch","state","App","view","openKeys","collapsed","openDrawer","current","height","handleClick","e","key","setTimeout","onOpenChange","newOpenKeys","latestOpenKey","find","indexOf","latestCloseKey","nextOpenKeys","getAncestorKeys","concat","map","sub3","isCollapsed","mode","onMouseEnter","event","onMouseLeave","styling","backgroundColor","submenuStyle","color","submenuColor","d"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;MAEQC,K,WAAAA,K;MAGNC,gB,GAIEL,U,CAJFK,gB;MACAC,c,GAGEN,U,CAHFM,c;MACAC,a,GAEEP,U,CAFFO,a;MACAC,e,GACER,U,CADFQ,e;AAGF,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;;AADgC,uBAS5BC,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACC,GAAlB,CATiB;AAAA,QAG9BC,IAH8B,gBAG9BA,IAH8B;AAAA,QAI9BC,QAJ8B,gBAI9BA,QAJ8B;AAAA,QAK9BC,SAL8B,gBAK9BA,SAL8B;AAAA,QAM9BC,UAN8B,gBAM9BA,UAN8B;AAAA,QAO9BC,OAP8B,gBAO9BA,OAP8B;AAAA,QAQ9BC,MAR8B,gBAQ9BA,MAR8B,EAUhC;AACA;AACA;;;AAEA,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtBV,IAAAA,QAAQ,CAACH,aAAa,CAAC,CAACa,CAAC,CAACC,GAAH,CAAD,CAAd,CAAR;;AACA,QAAIR,IAAI,KAAK,YAAb,EAA2B;AACzBS,MAAAA,UAAU,CAAC,MAAM;AACfZ,QAAAA,QAAQ,CAACF,eAAe,EAAhB,CAAR,CADe,CAEf;AACD,OAHS,EAGP,GAHO,CAAV;AAID;AACF;;AACD,WAASe,YAAT,CAAsBC,WAAtB,EAAmC;AACjC,UAAMC,aAAa,GAAGD,WAAW,CAACE,IAAZ,CACnBL,GAAD,IAAS,EAAEP,QAAQ,CAACa,OAAT,CAAiBN,GAAjB,IAAwB,CAAC,CAA3B,CADW,CAAtB;AAGA,UAAMO,cAAc,GAAGd,QAAQ,CAACY,IAAT,CACpBL,GAAD,IAAS,EAAEG,WAAW,CAACG,OAAZ,CAAoBN,GAApB,IAA2B,CAAC,CAA9B,CADY,CAAvB;AAGA,QAAIQ,YAAY,GAAG,EAAnB;;AACA,QAAIJ,aAAJ,EAAmB;AACjBI,MAAAA,YAAY,GAAGC,eAAe,CAACL,aAAD,CAAf,CAA+BM,MAA/B,CAAsCN,aAAtC,CAAf;AACD;;AACD,QAAIG,cAAJ,EAAoB;AAClBC,MAAAA,YAAY,GAAGC,eAAe,CAACF,cAAD,CAA9B;AACD;;AACDlB,IAAAA,QAAQ,CAACJ,cAAc,CAACuB,YAAD,CAAf,CAAR;AACD;;AACD,QAAMC,eAAe,GAAIT,GAAD,IAAS;AAC/B,UAAMW,GAAG,GAAG;AACVC,MAAAA,IAAI,EAAE,CAAC,MAAD;AADI,KAAZ;AAGA,WAAOD,GAAG,CAACX,GAAD,CAAH,IAAY,EAAnB;AACD,GALD;;AAOA,QAAMa,WAAW,GAAGtC,KAAK,CAACmB,SAAD,CAAL,IAAoB,CAACnB,KAAK,CAACoB,UAAD,CAA9C;AACA,QAAMmB,IAAI,GAAGD,WAAW,KAAK,IAAhB,GAAuB,UAAvB,GAAoC,QAAjD;;AACA,QAAME,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAItB,SAAS,IAAIC,UAAU,KAAK,KAAhC,EAAuC;AACrCN,MAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACD;;AACD;AACD,GALD;;AAMA,QAAMiC,YAAY,GAAG,MAAM;AACzB,QAAIvB,SAAS,IAAIC,UAAU,KAAK,IAAhC,EAAsC;AACpCN,MAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACD;;AACD;AACD,GALD;;AAMA,QAAMkC,OAAO,GAAG;AACdC,IAAAA,eAAe,EAAE;AADH,GAAhB;AAGA,QAAMC,YAAY,GAAG;AACnBD,IAAAA,eAAe,EAAE,iBADE;AAEnBE,IAAAA,KAAK,EAAE;AAFY,GAArB;AAIA,QAAMC,YAAY,GAAG;AACnBD,IAAAA,KAAK,EAAE;AADY,GAArB;AAGA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,SAAS,EAAER,WAHb;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,SAAS,EAAC,mBALZ;AAME,IAAA,YAAY,EAAEE,YANhB;AAOE,IAAA,YAAY,EAAEE,YAPhB;AAQE,IAAA,KAAK,EAAEC,OART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEL,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEhB,MAAAA,MAAM,EAAEA,MAAM,GAAG;AAAnB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAEC,WADX;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,SAAS,EAAC,kBAHZ;AAIE,IAAA,IAAI,EAAEgB,IAJR;AAKE,IAAA,QAAQ,EAAED,WAAW,GAAG,EAAH,GAAQpB,QAL/B;AAME,IAAA,YAAY,EAAEG,OANhB;AAOE,IAAA,YAAY,EAAEM,YAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASG1B,OAAO,CAACmC,GAAR,CAAaY,CAAD,iBACX,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,CAAC,CAACvB,GADT;AAEE,IAAA,YAAY,EAAEoB,YAFhB;AAGE,IAAA,YAAY,EAAEE,YAHhB;AAIE,IAAA,YAAY,EAAEC,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CATH,CADF,CAXF,CADF,CADF;AAoCD","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport clone from 'clone'\nimport { Layout } from 'antd'\nimport options from './options'\nimport Scrollbars from '@iso/components/utility/customScrollBar'\nimport Menu from '@iso/components/uielements/menu'\nimport appActions from '@iso/redux/app/actions'\nimport Logo from '@iso/components/utility/logo'\nimport SidebarWrapper from './Sidebar.styles'\nimport SidebarMenu from './SidebarMenu'\n\nconst { Sider } = Layout\n\nconst {\n  toggleOpenDrawer,\n  changeOpenKeys,\n  changeCurrent,\n  toggleCollapsed,\n} = appActions\n\nexport default function Sidebar() {\n  const dispatch = useDispatch()\n  const {\n    view,\n    openKeys,\n    collapsed,\n    openDrawer,\n    current,\n    height,\n  } = useSelector((state) => state.App)\n  // const customizedTheme = useSelector(\n  //   (state) => state.ThemeSwitcher.sidebarTheme\n  // )\n\n  function handleClick(e) {\n    dispatch(changeCurrent([e.key]))\n    if (view === 'MobileView') {\n      setTimeout(() => {\n        dispatch(toggleCollapsed())\n        // dispatch(toggleOpenDrawer());\n      }, 100)\n    }\n  }\n  function onOpenChange(newOpenKeys) {\n    const latestOpenKey = newOpenKeys.find(\n      (key) => !(openKeys.indexOf(key) > -1)\n    )\n    const latestCloseKey = openKeys.find(\n      (key) => !(newOpenKeys.indexOf(key) > -1)\n    )\n    let nextOpenKeys = []\n    if (latestOpenKey) {\n      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey)\n    }\n    if (latestCloseKey) {\n      nextOpenKeys = getAncestorKeys(latestCloseKey)\n    }\n    dispatch(changeOpenKeys(nextOpenKeys))\n  }\n  const getAncestorKeys = (key) => {\n    const map = {\n      sub3: ['sub2'],\n    }\n    return map[key] || []\n  }\n\n  const isCollapsed = clone(collapsed) && !clone(openDrawer)\n  const mode = isCollapsed === true ? 'vertical' : 'inline'\n  const onMouseEnter = (event) => {\n    if (collapsed && openDrawer === false) {\n      dispatch(toggleOpenDrawer())\n    }\n    return\n  }\n  const onMouseLeave = () => {\n    if (collapsed && openDrawer === true) {\n      dispatch(toggleOpenDrawer())\n    }\n    return\n  }\n  const styling = {\n    backgroundColor: '#323332',\n  }\n  const submenuStyle = {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    color: '#788195',\n  }\n  const submenuColor = {\n    color: '#788195',\n  }\n  return (\n    <SidebarWrapper>\n      <Sider\n        trigger={null}\n        collapsible={true}\n        collapsed={isCollapsed}\n        width={240}\n        className=\"isomorphicSidebar\"\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        style={styling}\n      >\n        <Logo collapsed={isCollapsed} />\n        <Scrollbars style={{ height: height - 70 }}>\n          <Menu\n            onClick={handleClick}\n            theme=\"dark\"\n            className=\"isoDashboardMenu\"\n            mode={mode}\n            openKeys={isCollapsed ? [] : openKeys}\n            selectedKeys={current}\n            onOpenChange={onOpenChange}\n          >\n            {options.map((d) => (\n              <SidebarMenu\n                key={d.key}\n                submenuStyle={submenuStyle}\n                submenuColor={submenuColor}\n                singleOption={d}\n              />\n            ))}\n          </Menu>\n        </Scrollbars>\n      </Sider>\n    </SidebarWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}